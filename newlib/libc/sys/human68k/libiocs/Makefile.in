# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = libiocs
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../../../acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/../../../../mkinstalldirs
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(toollibdir)"
LIBRARIES = $(toollib_LIBRARIES)
ARFLAGS = cru
libiocs_a_AR = $(AR) $(ARFLAGS)
libiocs_a_LIBADD =
am__objects_1 = libiocs_a-abortjob.$(OBJEXT) \
	libiocs_a-abortrst.$(OBJEXT) libiocs_a-adpcmain.$(OBJEXT) \
	libiocs_a-adpcmaot.$(OBJEXT) libiocs_a-adpcminp.$(OBJEXT) \
	libiocs_a-adpcmlin.$(OBJEXT) libiocs_a-adpcmlot.$(OBJEXT) \
	libiocs_a-adpcmmod.$(OBJEXT) libiocs_a-adpcmout.$(OBJEXT) \
	libiocs_a-adpcmsns.$(OBJEXT) libiocs_a-akconv.$(OBJEXT) \
	libiocs_a-alarmget.$(OBJEXT) libiocs_a-alarmmod.$(OBJEXT) \
	libiocs_a-alarmset.$(OBJEXT) libiocs_a-apage.$(OBJEXT) \
	libiocs_a-b_assign.$(OBJEXT) libiocs_a-b_badfmt.$(OBJEXT) \
	libiocs_a-b_bpeek.$(OBJEXT) libiocs_a-b_bpoke.$(OBJEXT) \
	libiocs_a-b_clr_al.$(OBJEXT) libiocs_a-b_clr_ed.$(OBJEXT) \
	libiocs_a-b_clr_st.$(OBJEXT) libiocs_a-b_color.$(OBJEXT) \
	libiocs_a-b_consol.$(OBJEXT) libiocs_a-b_curdef.$(OBJEXT) \
	libiocs_a-b_curmod.$(OBJEXT) libiocs_a-b_curoff.$(OBJEXT) \
	libiocs_a-b_curon.$(OBJEXT) libiocs_a-b_curpat.$(OBJEXT) \
	libiocs_a-b_curpat1.$(OBJEXT) libiocs_a-b_del.$(OBJEXT) \
	libiocs_a-b_down.$(OBJEXT) libiocs_a-b_down_s.$(OBJEXT) \
	libiocs_a-b_drvchk.$(OBJEXT) libiocs_a-b_drvsns.$(OBJEXT) \
	libiocs_a-b_dskini.$(OBJEXT) libiocs_a-b_eject.$(OBJEXT) \
	libiocs_a-b_era_al.$(OBJEXT) libiocs_a-b_era_ed.$(OBJEXT) \
	libiocs_a-b_era_st.$(OBJEXT) libiocs_a-b_format.$(OBJEXT) \
	libiocs_a-b_ins.$(OBJEXT) libiocs_a-b_intvcs.$(OBJEXT) \
	libiocs_a-b_keyinp.$(OBJEXT) libiocs_a-b_keysns.$(OBJEXT) \
	libiocs_a-b_left.$(OBJEXT) libiocs_a-b_locate.$(OBJEXT) \
	libiocs_a-b_lpeek.$(OBJEXT) libiocs_a-b_lpoke.$(OBJEXT) \
	libiocs_a-b_memset.$(OBJEXT) libiocs_a-b_memstr.$(OBJEXT) \
	libiocs_a-b_print.$(OBJEXT) libiocs_a-b_putc.$(OBJEXT) \
	libiocs_a-b_putmes.$(OBJEXT) libiocs_a-b_read.$(OBJEXT) \
	libiocs_a-b_readdi.$(OBJEXT) libiocs_a-b_readdl.$(OBJEXT) \
	libiocs_a-b_readid.$(OBJEXT) libiocs_a-b_recali.$(OBJEXT) \
	libiocs_a-b_right.$(OBJEXT) libiocs_a-b_scroll.$(OBJEXT) \
	libiocs_a-b_seek.$(OBJEXT) libiocs_a-b_sftsns.$(OBJEXT) \
	libiocs_a-b_super.$(OBJEXT) libiocs_a-b_up.$(OBJEXT) \
	libiocs_a-b_up_s.$(OBJEXT) libiocs_a-b_verify.$(OBJEXT) \
	libiocs_a-b_wpeek.$(OBJEXT) libiocs_a-b_wpoke.$(OBJEXT) \
	libiocs_a-b_write.$(OBJEXT) libiocs_a-b_writed.$(OBJEXT) \
	libiocs_a-bgctrlgt.$(OBJEXT) libiocs_a-bgctrlst.$(OBJEXT) \
	libiocs_a-bgscrlgt.$(OBJEXT) libiocs_a-bgscrlst.$(OBJEXT) \
	libiocs_a-bgtextcl.$(OBJEXT) libiocs_a-bgtextgt.$(OBJEXT) \
	libiocs_a-bgtextst.$(OBJEXT) libiocs_a-bindatebcd.$(OBJEXT) \
	libiocs_a-bindateget.$(OBJEXT) libiocs_a-bindateset.$(OBJEXT) \
	libiocs_a-bitsns.$(OBJEXT) libiocs_a-bootinf.$(OBJEXT) \
	libiocs_a-box.$(OBJEXT) libiocs_a-cache_md.$(OBJEXT) \
	libiocs_a-cache_st.$(OBJEXT) libiocs_a-circle.$(OBJEXT) \
	libiocs_a-clipput.$(OBJEXT) libiocs_a-contrast.$(OBJEXT) \
	libiocs_a-crtcras.$(OBJEXT) libiocs_a-crtmod.$(OBJEXT) \
	libiocs_a-dakjob.$(OBJEXT) libiocs_a-dateasc.$(OBJEXT) \
	libiocs_a-datebin.$(OBJEXT) libiocs_a-datecnv.$(OBJEXT) \
	libiocs_a-dayasc.$(OBJEXT) libiocs_a-defchr.$(OBJEXT) \
	libiocs_a-densns.$(OBJEXT) libiocs_a-dmamode.$(OBJEXT) \
	libiocs_a-dmamov_a.$(OBJEXT) libiocs_a-dmamov_l.$(OBJEXT) \
	libiocs_a-dmamove.$(OBJEXT) libiocs_a-drawmode.$(OBJEXT) \
	libiocs_a-fill.$(OBJEXT) libiocs_a-fntget.$(OBJEXT) \
	libiocs_a-g_clr_on.$(OBJEXT) libiocs_a-getgrm.$(OBJEXT) \
	libiocs_a-gpalet.$(OBJEXT) libiocs_a-hanjob.$(OBJEXT) \
	libiocs_a-home.$(OBJEXT) libiocs_a-hsvtorgb.$(OBJEXT) \
	libiocs_a-hsyncst.$(OBJEXT) libiocs_a-init_prn.$(OBJEXT) \
	libiocs_a-inp232c.$(OBJEXT) libiocs_a-iplerr.$(OBJEXT) \
	libiocs_a-isns232c.$(OBJEXT) libiocs_a-jissft.$(OBJEXT) \
	libiocs_a-joyget.$(OBJEXT) libiocs_a-ledmod.$(OBJEXT) \
	libiocs_a-line.$(OBJEXT) libiocs_a-lof232c.$(OBJEXT) \
	libiocs_a-mpu_stat.$(OBJEXT) libiocs_a-ms_curgt.$(OBJEXT) \
	libiocs_a-ms_curof.$(OBJEXT) libiocs_a-ms_curon.$(OBJEXT) \
	libiocs_a-ms_curst.$(OBJEXT) libiocs_a-ms_getdt.$(OBJEXT) \
	libiocs_a-ms_init.$(OBJEXT) libiocs_a-ms_limit.$(OBJEXT) \
	libiocs_a-ms_offtm.$(OBJEXT) libiocs_a-ms_ontm.$(OBJEXT) \
	libiocs_a-ms_patst.$(OBJEXT) libiocs_a-ms_sel.$(OBJEXT) \
	libiocs_a-ms_sel2.$(OBJEXT) libiocs_a-ms_stat.$(OBJEXT) \
	libiocs_a-ontime.$(OBJEXT) libiocs_a-opmintst.$(OBJEXT) \
	libiocs_a-opmset.$(OBJEXT) libiocs_a-opmsns.$(OBJEXT) \
	libiocs_a-os_curof.$(OBJEXT) libiocs_a-os_curon.$(OBJEXT) \
	libiocs_a-osns232c.$(OBJEXT) libiocs_a-out232c.$(OBJEXT) \
	libiocs_a-outlpt.$(OBJEXT) libiocs_a-outprn.$(OBJEXT) \
	libiocs_a-paint.$(OBJEXT) libiocs_a-point.$(OBJEXT) \
	libiocs_a-prnintst.$(OBJEXT) libiocs_a-pset.$(OBJEXT) \
	libiocs_a-putgrm.$(OBJEXT) libiocs_a-rmacnv.$(OBJEXT) \
	libiocs_a-romver.$(OBJEXT) libiocs_a-s_cmdout.$(OBJEXT) \
	libiocs_a-s_datain.$(OBJEXT) libiocs_a-s_dataout.$(OBJEXT) \
	libiocs_a-s_format.$(OBJEXT) libiocs_a-s_inquiry.$(OBJEXT) \
	libiocs_a-s_msgin.$(OBJEXT) libiocs_a-s_msgout.$(OBJEXT) \
	libiocs_a-s_pamedium.$(OBJEXT) libiocs_a-s_phase.$(OBJEXT) \
	libiocs_a-s_read.$(OBJEXT) libiocs_a-s_readcap.$(OBJEXT) \
	libiocs_a-s_readext.$(OBJEXT) libiocs_a-s_reassign.$(OBJEXT) \
	libiocs_a-s_request.$(OBJEXT) libiocs_a-s_reset.$(OBJEXT) \
	libiocs_a-s_rezerounit.$(OBJEXT) libiocs_a-s_seek.$(OBJEXT) \
	libiocs_a-s_select.$(OBJEXT) libiocs_a-s_startstop.$(OBJEXT) \
	libiocs_a-s_stsin.$(OBJEXT) libiocs_a-s_testunit.$(OBJEXT) \
	libiocs_a-s_write.$(OBJEXT) libiocs_a-s_writeext.$(OBJEXT) \
	libiocs_a-scroll.$(OBJEXT) libiocs_a-set232c.$(OBJEXT) \
	libiocs_a-sftjis.$(OBJEXT) libiocs_a-skey_mod.$(OBJEXT) \
	libiocs_a-skeyset.$(OBJEXT) libiocs_a-snsprn.$(OBJEXT) \
	libiocs_a-sp_cgclr.$(OBJEXT) libiocs_a-sp_defcg.$(OBJEXT) \
	libiocs_a-sp_gtpcg.$(OBJEXT) libiocs_a-sp_init.$(OBJEXT) \
	libiocs_a-sp_off.$(OBJEXT) libiocs_a-sp_on.$(OBJEXT) \
	libiocs_a-sp_reggt.$(OBJEXT) libiocs_a-sp_regst.$(OBJEXT) \
	libiocs_a-spalet.$(OBJEXT) libiocs_a-symbol.$(OBJEXT) \
	libiocs_a-tcolor.$(OBJEXT) libiocs_a-textget.$(OBJEXT) \
	libiocs_a-textput.$(OBJEXT) libiocs_a-tgusemd.$(OBJEXT) \
	libiocs_a-timeasc.$(OBJEXT) libiocs_a-timebcd.$(OBJEXT) \
	libiocs_a-timebin.$(OBJEXT) libiocs_a-timecnv.$(OBJEXT) \
	libiocs_a-timeget.$(OBJEXT) libiocs_a-timerdst.$(OBJEXT) \
	libiocs_a-timeset.$(OBJEXT) libiocs_a-tpalet.$(OBJEXT) \
	libiocs_a-tpalet2.$(OBJEXT) libiocs_a-trap15.$(OBJEXT) \
	libiocs_a-tvctrl.$(OBJEXT) libiocs_a-txbox.$(OBJEXT) \
	libiocs_a-txfill.$(OBJEXT) libiocs_a-txline.$(OBJEXT) \
	libiocs_a-txrascpy.$(OBJEXT) libiocs_a-txrev.$(OBJEXT) \
	libiocs_a-txxline.$(OBJEXT) libiocs_a-txyline.$(OBJEXT) \
	libiocs_a-vdispst.$(OBJEXT) libiocs_a-vpage.$(OBJEXT) \
	libiocs_a-window.$(OBJEXT) libiocs_a-wipe.$(OBJEXT)
am_libiocs_a_OBJECTS = $(am__objects_1)
libiocs_a_OBJECTS = $(am_libiocs_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp =
am__depfiles_maybe =
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libiocs_a_SOURCES)
ETAGS = etags
CTAGS = ctags
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CRT0 = @CRT0@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXTRA_SUBDIRS = @EXTRA_SUBDIRS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NEWLIB_CFLAGS = @NEWLIB_CFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
READELF = @READELF@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
aext = @aext@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libm_machine_dir = @libm_machine_dir@
localedir = @localedir@
localstatedir = @localstatedir@
lpfx = @lpfx@
machine_dir = @machine_dir@
mandir = @mandir@
mkdir_p = @mkdir_p@
newlib_basedir = @newlib_basedir@
oext = @oext@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sys_dir = @sys_dir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = cygnus
INCLUDES = -I$(srcdir)/../include $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
LIB_SOURCES = abortjob.S abortrst.S adpcmain.S adpcmaot.S adpcminp.S \
	adpcmlin.S adpcmlot.S adpcmmod.S adpcmout.S adpcmsns.S akconv.S \
	alarmget.S alarmmod.S alarmset.S apage.S b_assign.S b_badfmt.S \
	b_bpeek.S b_bpoke.S b_clr_al.S b_clr_ed.S b_clr_st.S b_color.S \
	b_consol.S b_curdef.S b_curmod.S b_curoff.S b_curon.S b_curpat.S \
	b_curpat1.S b_del.S b_down.S b_down_s.S b_drvchk.S b_drvsns.S \
	b_dskini.S b_eject.S b_era_al.S b_era_ed.S b_era_st.S b_format.S \
	b_ins.S b_intvcs.S b_keyinp.S b_keysns.S b_left.S b_locate.S \
	b_lpeek.S b_lpoke.S b_memset.S b_memstr.S b_print.S b_putc.S \
	b_putmes.S b_read.S b_readdi.S b_readdl.S b_readid.S b_recali.S \
	b_right.S b_scroll.S b_seek.S b_sftsns.S b_super.S b_up.S b_up_s.S \
	b_verify.S b_wpeek.S b_wpoke.S b_write.S b_writed.S bgctrlgt.S \
	bgctrlst.S bgscrlgt.S bgscrlst.S bgtextcl.S bgtextgt.S bgtextst.S \
	bindatebcd.S bindateget.S bindateset.S bitsns.S bootinf.S box.S \
	cache_md.S cache_st.S circle.S clipput.S contrast.S crtcras.S \
	crtmod.S dakjob.S dateasc.S datebin.S datecnv.S dayasc.S defchr.S \
	densns.S dmamode.S dmamov_a.S dmamov_l.S dmamove.S drawmode.S fill.S \
	fntget.S g_clr_on.S getgrm.S gpalet.S hanjob.S home.S hsvtorgb.S \
	hsyncst.S init_prn.S inp232c.S iplerr.S isns232c.S jissft.S joyget.S \
	ledmod.S line.S lof232c.S mpu_stat.S ms_curgt.S ms_curof.S \
	ms_curon.S ms_curst.S ms_getdt.S ms_init.S ms_limit.S ms_offtm.S \
	ms_ontm.S ms_patst.S ms_sel.S ms_sel2.S ms_stat.S ontime.S opmintst.S \
	opmset.S opmsns.S os_curof.S os_curon.S osns232c.S out232c.S outlpt.S \
	outprn.S paint.S point.S prnintst.S pset.S putgrm.S rmacnv.S romver.S \
	s_cmdout.S s_datain.S s_dataout.S s_format.S s_inquiry.S s_msgin.S \
	s_msgout.S s_pamedium.S s_phase.S s_read.S s_readcap.S s_readext.S \
	s_reassign.S s_request.S s_reset.S s_rezerounit.S s_seek.S s_select.S \
	s_startstop.S s_stsin.S s_testunit.S s_write.S s_writeext.S scroll.S \
	set232c.S sftjis.S skey_mod.S skeyset.S snsprn.S sp_cgclr.S \
	sp_defcg.S sp_gtpcg.S sp_init.S sp_off.S sp_on.S sp_reggt.S \
	sp_regst.S spalet.S symbol.S tcolor.S textget.S textput.S tgusemd.S \
	timeasc.S timebcd.S timebin.S timecnv.S timeget.S timerdst.S \
	timeset.S tpalet.S tpalet2.S trap15.S tvctrl.S txbox.S txfill.S \
	txline.S txrascpy.S txrev.S txxline.S txyline.S vdispst.S vpage.S \
	window.S wipe.S 

toollibdir = $(top_toollibdir)
toollib_LIBRARIES = libiocs.a
libiocs_a_SOURCES = $(LIB_SOURCES)
libiocs_a_CCASFLAGS = $(AM_CCASFLAGS)
ACLOCAL_AMFLAGS = -I ../../../.. -I ../../../../..
CONFIG_STATUS_DEPENDENCIES = $(newlib_basedir)/configure.host
all: all-am

.SUFFIXES:
.SUFFIXES: .S .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus libiocs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --cygnus libiocs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-toollibLIBRARIES: $(toollib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(toollibdir)" || $(MKDIR_P) "$(DESTDIR)$(toollibdir)"
	@list='$(toollib_LIBRARIES)'; test -n "$(toollibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(toollibdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(toollibdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(toollib_LIBRARIES)'; test -n "$(toollibdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(toollibdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(toollibdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-toollibLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(toollib_LIBRARIES)'; test -n "$(toollibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(toollibdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(toollibdir)" && rm -f $$files

clean-toollibLIBRARIES:
	-test -z "$(toollib_LIBRARIES)" || rm -f $(toollib_LIBRARIES)
libiocs.a: $(libiocs_a_OBJECTS) $(libiocs_a_DEPENDENCIES) 
	-rm -f libiocs.a
	$(libiocs_a_AR) libiocs.a $(libiocs_a_OBJECTS) $(libiocs_a_LIBADD)
	$(RANLIB) libiocs.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.S.o:
	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libiocs_a-abortjob.o: abortjob.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-abortjob.o `test -f 'abortjob.S' || echo '$(srcdir)/'`abortjob.S

libiocs_a-abortjob.obj: abortjob.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-abortjob.obj `if test -f 'abortjob.S'; then $(CYGPATH_W) 'abortjob.S'; else $(CYGPATH_W) '$(srcdir)/abortjob.S'; fi`

libiocs_a-abortrst.o: abortrst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-abortrst.o `test -f 'abortrst.S' || echo '$(srcdir)/'`abortrst.S

libiocs_a-abortrst.obj: abortrst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-abortrst.obj `if test -f 'abortrst.S'; then $(CYGPATH_W) 'abortrst.S'; else $(CYGPATH_W) '$(srcdir)/abortrst.S'; fi`

libiocs_a-adpcmain.o: adpcmain.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmain.o `test -f 'adpcmain.S' || echo '$(srcdir)/'`adpcmain.S

libiocs_a-adpcmain.obj: adpcmain.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmain.obj `if test -f 'adpcmain.S'; then $(CYGPATH_W) 'adpcmain.S'; else $(CYGPATH_W) '$(srcdir)/adpcmain.S'; fi`

libiocs_a-adpcmaot.o: adpcmaot.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmaot.o `test -f 'adpcmaot.S' || echo '$(srcdir)/'`adpcmaot.S

libiocs_a-adpcmaot.obj: adpcmaot.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmaot.obj `if test -f 'adpcmaot.S'; then $(CYGPATH_W) 'adpcmaot.S'; else $(CYGPATH_W) '$(srcdir)/adpcmaot.S'; fi`

libiocs_a-adpcminp.o: adpcminp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcminp.o `test -f 'adpcminp.S' || echo '$(srcdir)/'`adpcminp.S

libiocs_a-adpcminp.obj: adpcminp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcminp.obj `if test -f 'adpcminp.S'; then $(CYGPATH_W) 'adpcminp.S'; else $(CYGPATH_W) '$(srcdir)/adpcminp.S'; fi`

libiocs_a-adpcmlin.o: adpcmlin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmlin.o `test -f 'adpcmlin.S' || echo '$(srcdir)/'`adpcmlin.S

libiocs_a-adpcmlin.obj: adpcmlin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmlin.obj `if test -f 'adpcmlin.S'; then $(CYGPATH_W) 'adpcmlin.S'; else $(CYGPATH_W) '$(srcdir)/adpcmlin.S'; fi`

libiocs_a-adpcmlot.o: adpcmlot.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmlot.o `test -f 'adpcmlot.S' || echo '$(srcdir)/'`adpcmlot.S

libiocs_a-adpcmlot.obj: adpcmlot.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmlot.obj `if test -f 'adpcmlot.S'; then $(CYGPATH_W) 'adpcmlot.S'; else $(CYGPATH_W) '$(srcdir)/adpcmlot.S'; fi`

libiocs_a-adpcmmod.o: adpcmmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmmod.o `test -f 'adpcmmod.S' || echo '$(srcdir)/'`adpcmmod.S

libiocs_a-adpcmmod.obj: adpcmmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmmod.obj `if test -f 'adpcmmod.S'; then $(CYGPATH_W) 'adpcmmod.S'; else $(CYGPATH_W) '$(srcdir)/adpcmmod.S'; fi`

libiocs_a-adpcmout.o: adpcmout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmout.o `test -f 'adpcmout.S' || echo '$(srcdir)/'`adpcmout.S

libiocs_a-adpcmout.obj: adpcmout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmout.obj `if test -f 'adpcmout.S'; then $(CYGPATH_W) 'adpcmout.S'; else $(CYGPATH_W) '$(srcdir)/adpcmout.S'; fi`

libiocs_a-adpcmsns.o: adpcmsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmsns.o `test -f 'adpcmsns.S' || echo '$(srcdir)/'`adpcmsns.S

libiocs_a-adpcmsns.obj: adpcmsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-adpcmsns.obj `if test -f 'adpcmsns.S'; then $(CYGPATH_W) 'adpcmsns.S'; else $(CYGPATH_W) '$(srcdir)/adpcmsns.S'; fi`

libiocs_a-akconv.o: akconv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-akconv.o `test -f 'akconv.S' || echo '$(srcdir)/'`akconv.S

libiocs_a-akconv.obj: akconv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-akconv.obj `if test -f 'akconv.S'; then $(CYGPATH_W) 'akconv.S'; else $(CYGPATH_W) '$(srcdir)/akconv.S'; fi`

libiocs_a-alarmget.o: alarmget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-alarmget.o `test -f 'alarmget.S' || echo '$(srcdir)/'`alarmget.S

libiocs_a-alarmget.obj: alarmget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-alarmget.obj `if test -f 'alarmget.S'; then $(CYGPATH_W) 'alarmget.S'; else $(CYGPATH_W) '$(srcdir)/alarmget.S'; fi`

libiocs_a-alarmmod.o: alarmmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-alarmmod.o `test -f 'alarmmod.S' || echo '$(srcdir)/'`alarmmod.S

libiocs_a-alarmmod.obj: alarmmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-alarmmod.obj `if test -f 'alarmmod.S'; then $(CYGPATH_W) 'alarmmod.S'; else $(CYGPATH_W) '$(srcdir)/alarmmod.S'; fi`

libiocs_a-alarmset.o: alarmset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-alarmset.o `test -f 'alarmset.S' || echo '$(srcdir)/'`alarmset.S

libiocs_a-alarmset.obj: alarmset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-alarmset.obj `if test -f 'alarmset.S'; then $(CYGPATH_W) 'alarmset.S'; else $(CYGPATH_W) '$(srcdir)/alarmset.S'; fi`

libiocs_a-apage.o: apage.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-apage.o `test -f 'apage.S' || echo '$(srcdir)/'`apage.S

libiocs_a-apage.obj: apage.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-apage.obj `if test -f 'apage.S'; then $(CYGPATH_W) 'apage.S'; else $(CYGPATH_W) '$(srcdir)/apage.S'; fi`

libiocs_a-b_assign.o: b_assign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_assign.o `test -f 'b_assign.S' || echo '$(srcdir)/'`b_assign.S

libiocs_a-b_assign.obj: b_assign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_assign.obj `if test -f 'b_assign.S'; then $(CYGPATH_W) 'b_assign.S'; else $(CYGPATH_W) '$(srcdir)/b_assign.S'; fi`

libiocs_a-b_badfmt.o: b_badfmt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_badfmt.o `test -f 'b_badfmt.S' || echo '$(srcdir)/'`b_badfmt.S

libiocs_a-b_badfmt.obj: b_badfmt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_badfmt.obj `if test -f 'b_badfmt.S'; then $(CYGPATH_W) 'b_badfmt.S'; else $(CYGPATH_W) '$(srcdir)/b_badfmt.S'; fi`

libiocs_a-b_bpeek.o: b_bpeek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_bpeek.o `test -f 'b_bpeek.S' || echo '$(srcdir)/'`b_bpeek.S

libiocs_a-b_bpeek.obj: b_bpeek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_bpeek.obj `if test -f 'b_bpeek.S'; then $(CYGPATH_W) 'b_bpeek.S'; else $(CYGPATH_W) '$(srcdir)/b_bpeek.S'; fi`

libiocs_a-b_bpoke.o: b_bpoke.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_bpoke.o `test -f 'b_bpoke.S' || echo '$(srcdir)/'`b_bpoke.S

libiocs_a-b_bpoke.obj: b_bpoke.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_bpoke.obj `if test -f 'b_bpoke.S'; then $(CYGPATH_W) 'b_bpoke.S'; else $(CYGPATH_W) '$(srcdir)/b_bpoke.S'; fi`

libiocs_a-b_clr_al.o: b_clr_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_clr_al.o `test -f 'b_clr_al.S' || echo '$(srcdir)/'`b_clr_al.S

libiocs_a-b_clr_al.obj: b_clr_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_clr_al.obj `if test -f 'b_clr_al.S'; then $(CYGPATH_W) 'b_clr_al.S'; else $(CYGPATH_W) '$(srcdir)/b_clr_al.S'; fi`

libiocs_a-b_clr_ed.o: b_clr_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_clr_ed.o `test -f 'b_clr_ed.S' || echo '$(srcdir)/'`b_clr_ed.S

libiocs_a-b_clr_ed.obj: b_clr_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_clr_ed.obj `if test -f 'b_clr_ed.S'; then $(CYGPATH_W) 'b_clr_ed.S'; else $(CYGPATH_W) '$(srcdir)/b_clr_ed.S'; fi`

libiocs_a-b_clr_st.o: b_clr_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_clr_st.o `test -f 'b_clr_st.S' || echo '$(srcdir)/'`b_clr_st.S

libiocs_a-b_clr_st.obj: b_clr_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_clr_st.obj `if test -f 'b_clr_st.S'; then $(CYGPATH_W) 'b_clr_st.S'; else $(CYGPATH_W) '$(srcdir)/b_clr_st.S'; fi`

libiocs_a-b_color.o: b_color.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_color.o `test -f 'b_color.S' || echo '$(srcdir)/'`b_color.S

libiocs_a-b_color.obj: b_color.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_color.obj `if test -f 'b_color.S'; then $(CYGPATH_W) 'b_color.S'; else $(CYGPATH_W) '$(srcdir)/b_color.S'; fi`

libiocs_a-b_consol.o: b_consol.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_consol.o `test -f 'b_consol.S' || echo '$(srcdir)/'`b_consol.S

libiocs_a-b_consol.obj: b_consol.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_consol.obj `if test -f 'b_consol.S'; then $(CYGPATH_W) 'b_consol.S'; else $(CYGPATH_W) '$(srcdir)/b_consol.S'; fi`

libiocs_a-b_curdef.o: b_curdef.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curdef.o `test -f 'b_curdef.S' || echo '$(srcdir)/'`b_curdef.S

libiocs_a-b_curdef.obj: b_curdef.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curdef.obj `if test -f 'b_curdef.S'; then $(CYGPATH_W) 'b_curdef.S'; else $(CYGPATH_W) '$(srcdir)/b_curdef.S'; fi`

libiocs_a-b_curmod.o: b_curmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curmod.o `test -f 'b_curmod.S' || echo '$(srcdir)/'`b_curmod.S

libiocs_a-b_curmod.obj: b_curmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curmod.obj `if test -f 'b_curmod.S'; then $(CYGPATH_W) 'b_curmod.S'; else $(CYGPATH_W) '$(srcdir)/b_curmod.S'; fi`

libiocs_a-b_curoff.o: b_curoff.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curoff.o `test -f 'b_curoff.S' || echo '$(srcdir)/'`b_curoff.S

libiocs_a-b_curoff.obj: b_curoff.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curoff.obj `if test -f 'b_curoff.S'; then $(CYGPATH_W) 'b_curoff.S'; else $(CYGPATH_W) '$(srcdir)/b_curoff.S'; fi`

libiocs_a-b_curon.o: b_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curon.o `test -f 'b_curon.S' || echo '$(srcdir)/'`b_curon.S

libiocs_a-b_curon.obj: b_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curon.obj `if test -f 'b_curon.S'; then $(CYGPATH_W) 'b_curon.S'; else $(CYGPATH_W) '$(srcdir)/b_curon.S'; fi`

libiocs_a-b_curpat.o: b_curpat.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curpat.o `test -f 'b_curpat.S' || echo '$(srcdir)/'`b_curpat.S

libiocs_a-b_curpat.obj: b_curpat.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curpat.obj `if test -f 'b_curpat.S'; then $(CYGPATH_W) 'b_curpat.S'; else $(CYGPATH_W) '$(srcdir)/b_curpat.S'; fi`

libiocs_a-b_curpat1.o: b_curpat1.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curpat1.o `test -f 'b_curpat1.S' || echo '$(srcdir)/'`b_curpat1.S

libiocs_a-b_curpat1.obj: b_curpat1.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_curpat1.obj `if test -f 'b_curpat1.S'; then $(CYGPATH_W) 'b_curpat1.S'; else $(CYGPATH_W) '$(srcdir)/b_curpat1.S'; fi`

libiocs_a-b_del.o: b_del.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_del.o `test -f 'b_del.S' || echo '$(srcdir)/'`b_del.S

libiocs_a-b_del.obj: b_del.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_del.obj `if test -f 'b_del.S'; then $(CYGPATH_W) 'b_del.S'; else $(CYGPATH_W) '$(srcdir)/b_del.S'; fi`

libiocs_a-b_down.o: b_down.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_down.o `test -f 'b_down.S' || echo '$(srcdir)/'`b_down.S

libiocs_a-b_down.obj: b_down.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_down.obj `if test -f 'b_down.S'; then $(CYGPATH_W) 'b_down.S'; else $(CYGPATH_W) '$(srcdir)/b_down.S'; fi`

libiocs_a-b_down_s.o: b_down_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_down_s.o `test -f 'b_down_s.S' || echo '$(srcdir)/'`b_down_s.S

libiocs_a-b_down_s.obj: b_down_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_down_s.obj `if test -f 'b_down_s.S'; then $(CYGPATH_W) 'b_down_s.S'; else $(CYGPATH_W) '$(srcdir)/b_down_s.S'; fi`

libiocs_a-b_drvchk.o: b_drvchk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_drvchk.o `test -f 'b_drvchk.S' || echo '$(srcdir)/'`b_drvchk.S

libiocs_a-b_drvchk.obj: b_drvchk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_drvchk.obj `if test -f 'b_drvchk.S'; then $(CYGPATH_W) 'b_drvchk.S'; else $(CYGPATH_W) '$(srcdir)/b_drvchk.S'; fi`

libiocs_a-b_drvsns.o: b_drvsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_drvsns.o `test -f 'b_drvsns.S' || echo '$(srcdir)/'`b_drvsns.S

libiocs_a-b_drvsns.obj: b_drvsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_drvsns.obj `if test -f 'b_drvsns.S'; then $(CYGPATH_W) 'b_drvsns.S'; else $(CYGPATH_W) '$(srcdir)/b_drvsns.S'; fi`

libiocs_a-b_dskini.o: b_dskini.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_dskini.o `test -f 'b_dskini.S' || echo '$(srcdir)/'`b_dskini.S

libiocs_a-b_dskini.obj: b_dskini.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_dskini.obj `if test -f 'b_dskini.S'; then $(CYGPATH_W) 'b_dskini.S'; else $(CYGPATH_W) '$(srcdir)/b_dskini.S'; fi`

libiocs_a-b_eject.o: b_eject.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_eject.o `test -f 'b_eject.S' || echo '$(srcdir)/'`b_eject.S

libiocs_a-b_eject.obj: b_eject.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_eject.obj `if test -f 'b_eject.S'; then $(CYGPATH_W) 'b_eject.S'; else $(CYGPATH_W) '$(srcdir)/b_eject.S'; fi`

libiocs_a-b_era_al.o: b_era_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_era_al.o `test -f 'b_era_al.S' || echo '$(srcdir)/'`b_era_al.S

libiocs_a-b_era_al.obj: b_era_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_era_al.obj `if test -f 'b_era_al.S'; then $(CYGPATH_W) 'b_era_al.S'; else $(CYGPATH_W) '$(srcdir)/b_era_al.S'; fi`

libiocs_a-b_era_ed.o: b_era_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_era_ed.o `test -f 'b_era_ed.S' || echo '$(srcdir)/'`b_era_ed.S

libiocs_a-b_era_ed.obj: b_era_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_era_ed.obj `if test -f 'b_era_ed.S'; then $(CYGPATH_W) 'b_era_ed.S'; else $(CYGPATH_W) '$(srcdir)/b_era_ed.S'; fi`

libiocs_a-b_era_st.o: b_era_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_era_st.o `test -f 'b_era_st.S' || echo '$(srcdir)/'`b_era_st.S

libiocs_a-b_era_st.obj: b_era_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_era_st.obj `if test -f 'b_era_st.S'; then $(CYGPATH_W) 'b_era_st.S'; else $(CYGPATH_W) '$(srcdir)/b_era_st.S'; fi`

libiocs_a-b_format.o: b_format.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_format.o `test -f 'b_format.S' || echo '$(srcdir)/'`b_format.S

libiocs_a-b_format.obj: b_format.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_format.obj `if test -f 'b_format.S'; then $(CYGPATH_W) 'b_format.S'; else $(CYGPATH_W) '$(srcdir)/b_format.S'; fi`

libiocs_a-b_ins.o: b_ins.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_ins.o `test -f 'b_ins.S' || echo '$(srcdir)/'`b_ins.S

libiocs_a-b_ins.obj: b_ins.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_ins.obj `if test -f 'b_ins.S'; then $(CYGPATH_W) 'b_ins.S'; else $(CYGPATH_W) '$(srcdir)/b_ins.S'; fi`

libiocs_a-b_intvcs.o: b_intvcs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_intvcs.o `test -f 'b_intvcs.S' || echo '$(srcdir)/'`b_intvcs.S

libiocs_a-b_intvcs.obj: b_intvcs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_intvcs.obj `if test -f 'b_intvcs.S'; then $(CYGPATH_W) 'b_intvcs.S'; else $(CYGPATH_W) '$(srcdir)/b_intvcs.S'; fi`

libiocs_a-b_keyinp.o: b_keyinp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_keyinp.o `test -f 'b_keyinp.S' || echo '$(srcdir)/'`b_keyinp.S

libiocs_a-b_keyinp.obj: b_keyinp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_keyinp.obj `if test -f 'b_keyinp.S'; then $(CYGPATH_W) 'b_keyinp.S'; else $(CYGPATH_W) '$(srcdir)/b_keyinp.S'; fi`

libiocs_a-b_keysns.o: b_keysns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_keysns.o `test -f 'b_keysns.S' || echo '$(srcdir)/'`b_keysns.S

libiocs_a-b_keysns.obj: b_keysns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_keysns.obj `if test -f 'b_keysns.S'; then $(CYGPATH_W) 'b_keysns.S'; else $(CYGPATH_W) '$(srcdir)/b_keysns.S'; fi`

libiocs_a-b_left.o: b_left.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_left.o `test -f 'b_left.S' || echo '$(srcdir)/'`b_left.S

libiocs_a-b_left.obj: b_left.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_left.obj `if test -f 'b_left.S'; then $(CYGPATH_W) 'b_left.S'; else $(CYGPATH_W) '$(srcdir)/b_left.S'; fi`

libiocs_a-b_locate.o: b_locate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_locate.o `test -f 'b_locate.S' || echo '$(srcdir)/'`b_locate.S

libiocs_a-b_locate.obj: b_locate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_locate.obj `if test -f 'b_locate.S'; then $(CYGPATH_W) 'b_locate.S'; else $(CYGPATH_W) '$(srcdir)/b_locate.S'; fi`

libiocs_a-b_lpeek.o: b_lpeek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_lpeek.o `test -f 'b_lpeek.S' || echo '$(srcdir)/'`b_lpeek.S

libiocs_a-b_lpeek.obj: b_lpeek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_lpeek.obj `if test -f 'b_lpeek.S'; then $(CYGPATH_W) 'b_lpeek.S'; else $(CYGPATH_W) '$(srcdir)/b_lpeek.S'; fi`

libiocs_a-b_lpoke.o: b_lpoke.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_lpoke.o `test -f 'b_lpoke.S' || echo '$(srcdir)/'`b_lpoke.S

libiocs_a-b_lpoke.obj: b_lpoke.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_lpoke.obj `if test -f 'b_lpoke.S'; then $(CYGPATH_W) 'b_lpoke.S'; else $(CYGPATH_W) '$(srcdir)/b_lpoke.S'; fi`

libiocs_a-b_memset.o: b_memset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_memset.o `test -f 'b_memset.S' || echo '$(srcdir)/'`b_memset.S

libiocs_a-b_memset.obj: b_memset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_memset.obj `if test -f 'b_memset.S'; then $(CYGPATH_W) 'b_memset.S'; else $(CYGPATH_W) '$(srcdir)/b_memset.S'; fi`

libiocs_a-b_memstr.o: b_memstr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_memstr.o `test -f 'b_memstr.S' || echo '$(srcdir)/'`b_memstr.S

libiocs_a-b_memstr.obj: b_memstr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_memstr.obj `if test -f 'b_memstr.S'; then $(CYGPATH_W) 'b_memstr.S'; else $(CYGPATH_W) '$(srcdir)/b_memstr.S'; fi`

libiocs_a-b_print.o: b_print.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_print.o `test -f 'b_print.S' || echo '$(srcdir)/'`b_print.S

libiocs_a-b_print.obj: b_print.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_print.obj `if test -f 'b_print.S'; then $(CYGPATH_W) 'b_print.S'; else $(CYGPATH_W) '$(srcdir)/b_print.S'; fi`

libiocs_a-b_putc.o: b_putc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_putc.o `test -f 'b_putc.S' || echo '$(srcdir)/'`b_putc.S

libiocs_a-b_putc.obj: b_putc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_putc.obj `if test -f 'b_putc.S'; then $(CYGPATH_W) 'b_putc.S'; else $(CYGPATH_W) '$(srcdir)/b_putc.S'; fi`

libiocs_a-b_putmes.o: b_putmes.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_putmes.o `test -f 'b_putmes.S' || echo '$(srcdir)/'`b_putmes.S

libiocs_a-b_putmes.obj: b_putmes.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_putmes.obj `if test -f 'b_putmes.S'; then $(CYGPATH_W) 'b_putmes.S'; else $(CYGPATH_W) '$(srcdir)/b_putmes.S'; fi`

libiocs_a-b_read.o: b_read.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_read.o `test -f 'b_read.S' || echo '$(srcdir)/'`b_read.S

libiocs_a-b_read.obj: b_read.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_read.obj `if test -f 'b_read.S'; then $(CYGPATH_W) 'b_read.S'; else $(CYGPATH_W) '$(srcdir)/b_read.S'; fi`

libiocs_a-b_readdi.o: b_readdi.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_readdi.o `test -f 'b_readdi.S' || echo '$(srcdir)/'`b_readdi.S

libiocs_a-b_readdi.obj: b_readdi.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_readdi.obj `if test -f 'b_readdi.S'; then $(CYGPATH_W) 'b_readdi.S'; else $(CYGPATH_W) '$(srcdir)/b_readdi.S'; fi`

libiocs_a-b_readdl.o: b_readdl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_readdl.o `test -f 'b_readdl.S' || echo '$(srcdir)/'`b_readdl.S

libiocs_a-b_readdl.obj: b_readdl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_readdl.obj `if test -f 'b_readdl.S'; then $(CYGPATH_W) 'b_readdl.S'; else $(CYGPATH_W) '$(srcdir)/b_readdl.S'; fi`

libiocs_a-b_readid.o: b_readid.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_readid.o `test -f 'b_readid.S' || echo '$(srcdir)/'`b_readid.S

libiocs_a-b_readid.obj: b_readid.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_readid.obj `if test -f 'b_readid.S'; then $(CYGPATH_W) 'b_readid.S'; else $(CYGPATH_W) '$(srcdir)/b_readid.S'; fi`

libiocs_a-b_recali.o: b_recali.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_recali.o `test -f 'b_recali.S' || echo '$(srcdir)/'`b_recali.S

libiocs_a-b_recali.obj: b_recali.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_recali.obj `if test -f 'b_recali.S'; then $(CYGPATH_W) 'b_recali.S'; else $(CYGPATH_W) '$(srcdir)/b_recali.S'; fi`

libiocs_a-b_right.o: b_right.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_right.o `test -f 'b_right.S' || echo '$(srcdir)/'`b_right.S

libiocs_a-b_right.obj: b_right.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_right.obj `if test -f 'b_right.S'; then $(CYGPATH_W) 'b_right.S'; else $(CYGPATH_W) '$(srcdir)/b_right.S'; fi`

libiocs_a-b_scroll.o: b_scroll.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_scroll.o `test -f 'b_scroll.S' || echo '$(srcdir)/'`b_scroll.S

libiocs_a-b_scroll.obj: b_scroll.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_scroll.obj `if test -f 'b_scroll.S'; then $(CYGPATH_W) 'b_scroll.S'; else $(CYGPATH_W) '$(srcdir)/b_scroll.S'; fi`

libiocs_a-b_seek.o: b_seek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_seek.o `test -f 'b_seek.S' || echo '$(srcdir)/'`b_seek.S

libiocs_a-b_seek.obj: b_seek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_seek.obj `if test -f 'b_seek.S'; then $(CYGPATH_W) 'b_seek.S'; else $(CYGPATH_W) '$(srcdir)/b_seek.S'; fi`

libiocs_a-b_sftsns.o: b_sftsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_sftsns.o `test -f 'b_sftsns.S' || echo '$(srcdir)/'`b_sftsns.S

libiocs_a-b_sftsns.obj: b_sftsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_sftsns.obj `if test -f 'b_sftsns.S'; then $(CYGPATH_W) 'b_sftsns.S'; else $(CYGPATH_W) '$(srcdir)/b_sftsns.S'; fi`

libiocs_a-b_super.o: b_super.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_super.o `test -f 'b_super.S' || echo '$(srcdir)/'`b_super.S

libiocs_a-b_super.obj: b_super.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_super.obj `if test -f 'b_super.S'; then $(CYGPATH_W) 'b_super.S'; else $(CYGPATH_W) '$(srcdir)/b_super.S'; fi`

libiocs_a-b_up.o: b_up.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_up.o `test -f 'b_up.S' || echo '$(srcdir)/'`b_up.S

libiocs_a-b_up.obj: b_up.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_up.obj `if test -f 'b_up.S'; then $(CYGPATH_W) 'b_up.S'; else $(CYGPATH_W) '$(srcdir)/b_up.S'; fi`

libiocs_a-b_up_s.o: b_up_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_up_s.o `test -f 'b_up_s.S' || echo '$(srcdir)/'`b_up_s.S

libiocs_a-b_up_s.obj: b_up_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_up_s.obj `if test -f 'b_up_s.S'; then $(CYGPATH_W) 'b_up_s.S'; else $(CYGPATH_W) '$(srcdir)/b_up_s.S'; fi`

libiocs_a-b_verify.o: b_verify.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_verify.o `test -f 'b_verify.S' || echo '$(srcdir)/'`b_verify.S

libiocs_a-b_verify.obj: b_verify.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_verify.obj `if test -f 'b_verify.S'; then $(CYGPATH_W) 'b_verify.S'; else $(CYGPATH_W) '$(srcdir)/b_verify.S'; fi`

libiocs_a-b_wpeek.o: b_wpeek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_wpeek.o `test -f 'b_wpeek.S' || echo '$(srcdir)/'`b_wpeek.S

libiocs_a-b_wpeek.obj: b_wpeek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_wpeek.obj `if test -f 'b_wpeek.S'; then $(CYGPATH_W) 'b_wpeek.S'; else $(CYGPATH_W) '$(srcdir)/b_wpeek.S'; fi`

libiocs_a-b_wpoke.o: b_wpoke.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_wpoke.o `test -f 'b_wpoke.S' || echo '$(srcdir)/'`b_wpoke.S

libiocs_a-b_wpoke.obj: b_wpoke.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_wpoke.obj `if test -f 'b_wpoke.S'; then $(CYGPATH_W) 'b_wpoke.S'; else $(CYGPATH_W) '$(srcdir)/b_wpoke.S'; fi`

libiocs_a-b_write.o: b_write.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_write.o `test -f 'b_write.S' || echo '$(srcdir)/'`b_write.S

libiocs_a-b_write.obj: b_write.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_write.obj `if test -f 'b_write.S'; then $(CYGPATH_W) 'b_write.S'; else $(CYGPATH_W) '$(srcdir)/b_write.S'; fi`

libiocs_a-b_writed.o: b_writed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_writed.o `test -f 'b_writed.S' || echo '$(srcdir)/'`b_writed.S

libiocs_a-b_writed.obj: b_writed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-b_writed.obj `if test -f 'b_writed.S'; then $(CYGPATH_W) 'b_writed.S'; else $(CYGPATH_W) '$(srcdir)/b_writed.S'; fi`

libiocs_a-bgctrlgt.o: bgctrlgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgctrlgt.o `test -f 'bgctrlgt.S' || echo '$(srcdir)/'`bgctrlgt.S

libiocs_a-bgctrlgt.obj: bgctrlgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgctrlgt.obj `if test -f 'bgctrlgt.S'; then $(CYGPATH_W) 'bgctrlgt.S'; else $(CYGPATH_W) '$(srcdir)/bgctrlgt.S'; fi`

libiocs_a-bgctrlst.o: bgctrlst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgctrlst.o `test -f 'bgctrlst.S' || echo '$(srcdir)/'`bgctrlst.S

libiocs_a-bgctrlst.obj: bgctrlst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgctrlst.obj `if test -f 'bgctrlst.S'; then $(CYGPATH_W) 'bgctrlst.S'; else $(CYGPATH_W) '$(srcdir)/bgctrlst.S'; fi`

libiocs_a-bgscrlgt.o: bgscrlgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgscrlgt.o `test -f 'bgscrlgt.S' || echo '$(srcdir)/'`bgscrlgt.S

libiocs_a-bgscrlgt.obj: bgscrlgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgscrlgt.obj `if test -f 'bgscrlgt.S'; then $(CYGPATH_W) 'bgscrlgt.S'; else $(CYGPATH_W) '$(srcdir)/bgscrlgt.S'; fi`

libiocs_a-bgscrlst.o: bgscrlst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgscrlst.o `test -f 'bgscrlst.S' || echo '$(srcdir)/'`bgscrlst.S

libiocs_a-bgscrlst.obj: bgscrlst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgscrlst.obj `if test -f 'bgscrlst.S'; then $(CYGPATH_W) 'bgscrlst.S'; else $(CYGPATH_W) '$(srcdir)/bgscrlst.S'; fi`

libiocs_a-bgtextcl.o: bgtextcl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgtextcl.o `test -f 'bgtextcl.S' || echo '$(srcdir)/'`bgtextcl.S

libiocs_a-bgtextcl.obj: bgtextcl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgtextcl.obj `if test -f 'bgtextcl.S'; then $(CYGPATH_W) 'bgtextcl.S'; else $(CYGPATH_W) '$(srcdir)/bgtextcl.S'; fi`

libiocs_a-bgtextgt.o: bgtextgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgtextgt.o `test -f 'bgtextgt.S' || echo '$(srcdir)/'`bgtextgt.S

libiocs_a-bgtextgt.obj: bgtextgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgtextgt.obj `if test -f 'bgtextgt.S'; then $(CYGPATH_W) 'bgtextgt.S'; else $(CYGPATH_W) '$(srcdir)/bgtextgt.S'; fi`

libiocs_a-bgtextst.o: bgtextst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgtextst.o `test -f 'bgtextst.S' || echo '$(srcdir)/'`bgtextst.S

libiocs_a-bgtextst.obj: bgtextst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bgtextst.obj `if test -f 'bgtextst.S'; then $(CYGPATH_W) 'bgtextst.S'; else $(CYGPATH_W) '$(srcdir)/bgtextst.S'; fi`

libiocs_a-bindatebcd.o: bindatebcd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bindatebcd.o `test -f 'bindatebcd.S' || echo '$(srcdir)/'`bindatebcd.S

libiocs_a-bindatebcd.obj: bindatebcd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bindatebcd.obj `if test -f 'bindatebcd.S'; then $(CYGPATH_W) 'bindatebcd.S'; else $(CYGPATH_W) '$(srcdir)/bindatebcd.S'; fi`

libiocs_a-bindateget.o: bindateget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bindateget.o `test -f 'bindateget.S' || echo '$(srcdir)/'`bindateget.S

libiocs_a-bindateget.obj: bindateget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bindateget.obj `if test -f 'bindateget.S'; then $(CYGPATH_W) 'bindateget.S'; else $(CYGPATH_W) '$(srcdir)/bindateget.S'; fi`

libiocs_a-bindateset.o: bindateset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bindateset.o `test -f 'bindateset.S' || echo '$(srcdir)/'`bindateset.S

libiocs_a-bindateset.obj: bindateset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bindateset.obj `if test -f 'bindateset.S'; then $(CYGPATH_W) 'bindateset.S'; else $(CYGPATH_W) '$(srcdir)/bindateset.S'; fi`

libiocs_a-bitsns.o: bitsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bitsns.o `test -f 'bitsns.S' || echo '$(srcdir)/'`bitsns.S

libiocs_a-bitsns.obj: bitsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bitsns.obj `if test -f 'bitsns.S'; then $(CYGPATH_W) 'bitsns.S'; else $(CYGPATH_W) '$(srcdir)/bitsns.S'; fi`

libiocs_a-bootinf.o: bootinf.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bootinf.o `test -f 'bootinf.S' || echo '$(srcdir)/'`bootinf.S

libiocs_a-bootinf.obj: bootinf.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-bootinf.obj `if test -f 'bootinf.S'; then $(CYGPATH_W) 'bootinf.S'; else $(CYGPATH_W) '$(srcdir)/bootinf.S'; fi`

libiocs_a-box.o: box.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-box.o `test -f 'box.S' || echo '$(srcdir)/'`box.S

libiocs_a-box.obj: box.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-box.obj `if test -f 'box.S'; then $(CYGPATH_W) 'box.S'; else $(CYGPATH_W) '$(srcdir)/box.S'; fi`

libiocs_a-cache_md.o: cache_md.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-cache_md.o `test -f 'cache_md.S' || echo '$(srcdir)/'`cache_md.S

libiocs_a-cache_md.obj: cache_md.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-cache_md.obj `if test -f 'cache_md.S'; then $(CYGPATH_W) 'cache_md.S'; else $(CYGPATH_W) '$(srcdir)/cache_md.S'; fi`

libiocs_a-cache_st.o: cache_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-cache_st.o `test -f 'cache_st.S' || echo '$(srcdir)/'`cache_st.S

libiocs_a-cache_st.obj: cache_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-cache_st.obj `if test -f 'cache_st.S'; then $(CYGPATH_W) 'cache_st.S'; else $(CYGPATH_W) '$(srcdir)/cache_st.S'; fi`

libiocs_a-circle.o: circle.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-circle.o `test -f 'circle.S' || echo '$(srcdir)/'`circle.S

libiocs_a-circle.obj: circle.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-circle.obj `if test -f 'circle.S'; then $(CYGPATH_W) 'circle.S'; else $(CYGPATH_W) '$(srcdir)/circle.S'; fi`

libiocs_a-clipput.o: clipput.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-clipput.o `test -f 'clipput.S' || echo '$(srcdir)/'`clipput.S

libiocs_a-clipput.obj: clipput.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-clipput.obj `if test -f 'clipput.S'; then $(CYGPATH_W) 'clipput.S'; else $(CYGPATH_W) '$(srcdir)/clipput.S'; fi`

libiocs_a-contrast.o: contrast.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-contrast.o `test -f 'contrast.S' || echo '$(srcdir)/'`contrast.S

libiocs_a-contrast.obj: contrast.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-contrast.obj `if test -f 'contrast.S'; then $(CYGPATH_W) 'contrast.S'; else $(CYGPATH_W) '$(srcdir)/contrast.S'; fi`

libiocs_a-crtcras.o: crtcras.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-crtcras.o `test -f 'crtcras.S' || echo '$(srcdir)/'`crtcras.S

libiocs_a-crtcras.obj: crtcras.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-crtcras.obj `if test -f 'crtcras.S'; then $(CYGPATH_W) 'crtcras.S'; else $(CYGPATH_W) '$(srcdir)/crtcras.S'; fi`

libiocs_a-crtmod.o: crtmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-crtmod.o `test -f 'crtmod.S' || echo '$(srcdir)/'`crtmod.S

libiocs_a-crtmod.obj: crtmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-crtmod.obj `if test -f 'crtmod.S'; then $(CYGPATH_W) 'crtmod.S'; else $(CYGPATH_W) '$(srcdir)/crtmod.S'; fi`

libiocs_a-dakjob.o: dakjob.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dakjob.o `test -f 'dakjob.S' || echo '$(srcdir)/'`dakjob.S

libiocs_a-dakjob.obj: dakjob.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dakjob.obj `if test -f 'dakjob.S'; then $(CYGPATH_W) 'dakjob.S'; else $(CYGPATH_W) '$(srcdir)/dakjob.S'; fi`

libiocs_a-dateasc.o: dateasc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dateasc.o `test -f 'dateasc.S' || echo '$(srcdir)/'`dateasc.S

libiocs_a-dateasc.obj: dateasc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dateasc.obj `if test -f 'dateasc.S'; then $(CYGPATH_W) 'dateasc.S'; else $(CYGPATH_W) '$(srcdir)/dateasc.S'; fi`

libiocs_a-datebin.o: datebin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-datebin.o `test -f 'datebin.S' || echo '$(srcdir)/'`datebin.S

libiocs_a-datebin.obj: datebin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-datebin.obj `if test -f 'datebin.S'; then $(CYGPATH_W) 'datebin.S'; else $(CYGPATH_W) '$(srcdir)/datebin.S'; fi`

libiocs_a-datecnv.o: datecnv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-datecnv.o `test -f 'datecnv.S' || echo '$(srcdir)/'`datecnv.S

libiocs_a-datecnv.obj: datecnv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-datecnv.obj `if test -f 'datecnv.S'; then $(CYGPATH_W) 'datecnv.S'; else $(CYGPATH_W) '$(srcdir)/datecnv.S'; fi`

libiocs_a-dayasc.o: dayasc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dayasc.o `test -f 'dayasc.S' || echo '$(srcdir)/'`dayasc.S

libiocs_a-dayasc.obj: dayasc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dayasc.obj `if test -f 'dayasc.S'; then $(CYGPATH_W) 'dayasc.S'; else $(CYGPATH_W) '$(srcdir)/dayasc.S'; fi`

libiocs_a-defchr.o: defchr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-defchr.o `test -f 'defchr.S' || echo '$(srcdir)/'`defchr.S

libiocs_a-defchr.obj: defchr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-defchr.obj `if test -f 'defchr.S'; then $(CYGPATH_W) 'defchr.S'; else $(CYGPATH_W) '$(srcdir)/defchr.S'; fi`

libiocs_a-densns.o: densns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-densns.o `test -f 'densns.S' || echo '$(srcdir)/'`densns.S

libiocs_a-densns.obj: densns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-densns.obj `if test -f 'densns.S'; then $(CYGPATH_W) 'densns.S'; else $(CYGPATH_W) '$(srcdir)/densns.S'; fi`

libiocs_a-dmamode.o: dmamode.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamode.o `test -f 'dmamode.S' || echo '$(srcdir)/'`dmamode.S

libiocs_a-dmamode.obj: dmamode.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamode.obj `if test -f 'dmamode.S'; then $(CYGPATH_W) 'dmamode.S'; else $(CYGPATH_W) '$(srcdir)/dmamode.S'; fi`

libiocs_a-dmamov_a.o: dmamov_a.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamov_a.o `test -f 'dmamov_a.S' || echo '$(srcdir)/'`dmamov_a.S

libiocs_a-dmamov_a.obj: dmamov_a.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamov_a.obj `if test -f 'dmamov_a.S'; then $(CYGPATH_W) 'dmamov_a.S'; else $(CYGPATH_W) '$(srcdir)/dmamov_a.S'; fi`

libiocs_a-dmamov_l.o: dmamov_l.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamov_l.o `test -f 'dmamov_l.S' || echo '$(srcdir)/'`dmamov_l.S

libiocs_a-dmamov_l.obj: dmamov_l.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamov_l.obj `if test -f 'dmamov_l.S'; then $(CYGPATH_W) 'dmamov_l.S'; else $(CYGPATH_W) '$(srcdir)/dmamov_l.S'; fi`

libiocs_a-dmamove.o: dmamove.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamove.o `test -f 'dmamove.S' || echo '$(srcdir)/'`dmamove.S

libiocs_a-dmamove.obj: dmamove.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-dmamove.obj `if test -f 'dmamove.S'; then $(CYGPATH_W) 'dmamove.S'; else $(CYGPATH_W) '$(srcdir)/dmamove.S'; fi`

libiocs_a-drawmode.o: drawmode.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-drawmode.o `test -f 'drawmode.S' || echo '$(srcdir)/'`drawmode.S

libiocs_a-drawmode.obj: drawmode.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-drawmode.obj `if test -f 'drawmode.S'; then $(CYGPATH_W) 'drawmode.S'; else $(CYGPATH_W) '$(srcdir)/drawmode.S'; fi`

libiocs_a-fill.o: fill.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-fill.o `test -f 'fill.S' || echo '$(srcdir)/'`fill.S

libiocs_a-fill.obj: fill.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-fill.obj `if test -f 'fill.S'; then $(CYGPATH_W) 'fill.S'; else $(CYGPATH_W) '$(srcdir)/fill.S'; fi`

libiocs_a-fntget.o: fntget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-fntget.o `test -f 'fntget.S' || echo '$(srcdir)/'`fntget.S

libiocs_a-fntget.obj: fntget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-fntget.obj `if test -f 'fntget.S'; then $(CYGPATH_W) 'fntget.S'; else $(CYGPATH_W) '$(srcdir)/fntget.S'; fi`

libiocs_a-g_clr_on.o: g_clr_on.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-g_clr_on.o `test -f 'g_clr_on.S' || echo '$(srcdir)/'`g_clr_on.S

libiocs_a-g_clr_on.obj: g_clr_on.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-g_clr_on.obj `if test -f 'g_clr_on.S'; then $(CYGPATH_W) 'g_clr_on.S'; else $(CYGPATH_W) '$(srcdir)/g_clr_on.S'; fi`

libiocs_a-getgrm.o: getgrm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-getgrm.o `test -f 'getgrm.S' || echo '$(srcdir)/'`getgrm.S

libiocs_a-getgrm.obj: getgrm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-getgrm.obj `if test -f 'getgrm.S'; then $(CYGPATH_W) 'getgrm.S'; else $(CYGPATH_W) '$(srcdir)/getgrm.S'; fi`

libiocs_a-gpalet.o: gpalet.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-gpalet.o `test -f 'gpalet.S' || echo '$(srcdir)/'`gpalet.S

libiocs_a-gpalet.obj: gpalet.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-gpalet.obj `if test -f 'gpalet.S'; then $(CYGPATH_W) 'gpalet.S'; else $(CYGPATH_W) '$(srcdir)/gpalet.S'; fi`

libiocs_a-hanjob.o: hanjob.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-hanjob.o `test -f 'hanjob.S' || echo '$(srcdir)/'`hanjob.S

libiocs_a-hanjob.obj: hanjob.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-hanjob.obj `if test -f 'hanjob.S'; then $(CYGPATH_W) 'hanjob.S'; else $(CYGPATH_W) '$(srcdir)/hanjob.S'; fi`

libiocs_a-home.o: home.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-home.o `test -f 'home.S' || echo '$(srcdir)/'`home.S

libiocs_a-home.obj: home.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-home.obj `if test -f 'home.S'; then $(CYGPATH_W) 'home.S'; else $(CYGPATH_W) '$(srcdir)/home.S'; fi`

libiocs_a-hsvtorgb.o: hsvtorgb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-hsvtorgb.o `test -f 'hsvtorgb.S' || echo '$(srcdir)/'`hsvtorgb.S

libiocs_a-hsvtorgb.obj: hsvtorgb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-hsvtorgb.obj `if test -f 'hsvtorgb.S'; then $(CYGPATH_W) 'hsvtorgb.S'; else $(CYGPATH_W) '$(srcdir)/hsvtorgb.S'; fi`

libiocs_a-hsyncst.o: hsyncst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-hsyncst.o `test -f 'hsyncst.S' || echo '$(srcdir)/'`hsyncst.S

libiocs_a-hsyncst.obj: hsyncst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-hsyncst.obj `if test -f 'hsyncst.S'; then $(CYGPATH_W) 'hsyncst.S'; else $(CYGPATH_W) '$(srcdir)/hsyncst.S'; fi`

libiocs_a-init_prn.o: init_prn.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-init_prn.o `test -f 'init_prn.S' || echo '$(srcdir)/'`init_prn.S

libiocs_a-init_prn.obj: init_prn.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-init_prn.obj `if test -f 'init_prn.S'; then $(CYGPATH_W) 'init_prn.S'; else $(CYGPATH_W) '$(srcdir)/init_prn.S'; fi`

libiocs_a-inp232c.o: inp232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-inp232c.o `test -f 'inp232c.S' || echo '$(srcdir)/'`inp232c.S

libiocs_a-inp232c.obj: inp232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-inp232c.obj `if test -f 'inp232c.S'; then $(CYGPATH_W) 'inp232c.S'; else $(CYGPATH_W) '$(srcdir)/inp232c.S'; fi`

libiocs_a-iplerr.o: iplerr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-iplerr.o `test -f 'iplerr.S' || echo '$(srcdir)/'`iplerr.S

libiocs_a-iplerr.obj: iplerr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-iplerr.obj `if test -f 'iplerr.S'; then $(CYGPATH_W) 'iplerr.S'; else $(CYGPATH_W) '$(srcdir)/iplerr.S'; fi`

libiocs_a-isns232c.o: isns232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-isns232c.o `test -f 'isns232c.S' || echo '$(srcdir)/'`isns232c.S

libiocs_a-isns232c.obj: isns232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-isns232c.obj `if test -f 'isns232c.S'; then $(CYGPATH_W) 'isns232c.S'; else $(CYGPATH_W) '$(srcdir)/isns232c.S'; fi`

libiocs_a-jissft.o: jissft.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-jissft.o `test -f 'jissft.S' || echo '$(srcdir)/'`jissft.S

libiocs_a-jissft.obj: jissft.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-jissft.obj `if test -f 'jissft.S'; then $(CYGPATH_W) 'jissft.S'; else $(CYGPATH_W) '$(srcdir)/jissft.S'; fi`

libiocs_a-joyget.o: joyget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-joyget.o `test -f 'joyget.S' || echo '$(srcdir)/'`joyget.S

libiocs_a-joyget.obj: joyget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-joyget.obj `if test -f 'joyget.S'; then $(CYGPATH_W) 'joyget.S'; else $(CYGPATH_W) '$(srcdir)/joyget.S'; fi`

libiocs_a-ledmod.o: ledmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ledmod.o `test -f 'ledmod.S' || echo '$(srcdir)/'`ledmod.S

libiocs_a-ledmod.obj: ledmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ledmod.obj `if test -f 'ledmod.S'; then $(CYGPATH_W) 'ledmod.S'; else $(CYGPATH_W) '$(srcdir)/ledmod.S'; fi`

libiocs_a-line.o: line.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-line.o `test -f 'line.S' || echo '$(srcdir)/'`line.S

libiocs_a-line.obj: line.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-line.obj `if test -f 'line.S'; then $(CYGPATH_W) 'line.S'; else $(CYGPATH_W) '$(srcdir)/line.S'; fi`

libiocs_a-lof232c.o: lof232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-lof232c.o `test -f 'lof232c.S' || echo '$(srcdir)/'`lof232c.S

libiocs_a-lof232c.obj: lof232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-lof232c.obj `if test -f 'lof232c.S'; then $(CYGPATH_W) 'lof232c.S'; else $(CYGPATH_W) '$(srcdir)/lof232c.S'; fi`

libiocs_a-mpu_stat.o: mpu_stat.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-mpu_stat.o `test -f 'mpu_stat.S' || echo '$(srcdir)/'`mpu_stat.S

libiocs_a-mpu_stat.obj: mpu_stat.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-mpu_stat.obj `if test -f 'mpu_stat.S'; then $(CYGPATH_W) 'mpu_stat.S'; else $(CYGPATH_W) '$(srcdir)/mpu_stat.S'; fi`

libiocs_a-ms_curgt.o: ms_curgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curgt.o `test -f 'ms_curgt.S' || echo '$(srcdir)/'`ms_curgt.S

libiocs_a-ms_curgt.obj: ms_curgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curgt.obj `if test -f 'ms_curgt.S'; then $(CYGPATH_W) 'ms_curgt.S'; else $(CYGPATH_W) '$(srcdir)/ms_curgt.S'; fi`

libiocs_a-ms_curof.o: ms_curof.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curof.o `test -f 'ms_curof.S' || echo '$(srcdir)/'`ms_curof.S

libiocs_a-ms_curof.obj: ms_curof.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curof.obj `if test -f 'ms_curof.S'; then $(CYGPATH_W) 'ms_curof.S'; else $(CYGPATH_W) '$(srcdir)/ms_curof.S'; fi`

libiocs_a-ms_curon.o: ms_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curon.o `test -f 'ms_curon.S' || echo '$(srcdir)/'`ms_curon.S

libiocs_a-ms_curon.obj: ms_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curon.obj `if test -f 'ms_curon.S'; then $(CYGPATH_W) 'ms_curon.S'; else $(CYGPATH_W) '$(srcdir)/ms_curon.S'; fi`

libiocs_a-ms_curst.o: ms_curst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curst.o `test -f 'ms_curst.S' || echo '$(srcdir)/'`ms_curst.S

libiocs_a-ms_curst.obj: ms_curst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_curst.obj `if test -f 'ms_curst.S'; then $(CYGPATH_W) 'ms_curst.S'; else $(CYGPATH_W) '$(srcdir)/ms_curst.S'; fi`

libiocs_a-ms_getdt.o: ms_getdt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_getdt.o `test -f 'ms_getdt.S' || echo '$(srcdir)/'`ms_getdt.S

libiocs_a-ms_getdt.obj: ms_getdt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_getdt.obj `if test -f 'ms_getdt.S'; then $(CYGPATH_W) 'ms_getdt.S'; else $(CYGPATH_W) '$(srcdir)/ms_getdt.S'; fi`

libiocs_a-ms_init.o: ms_init.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_init.o `test -f 'ms_init.S' || echo '$(srcdir)/'`ms_init.S

libiocs_a-ms_init.obj: ms_init.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_init.obj `if test -f 'ms_init.S'; then $(CYGPATH_W) 'ms_init.S'; else $(CYGPATH_W) '$(srcdir)/ms_init.S'; fi`

libiocs_a-ms_limit.o: ms_limit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_limit.o `test -f 'ms_limit.S' || echo '$(srcdir)/'`ms_limit.S

libiocs_a-ms_limit.obj: ms_limit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_limit.obj `if test -f 'ms_limit.S'; then $(CYGPATH_W) 'ms_limit.S'; else $(CYGPATH_W) '$(srcdir)/ms_limit.S'; fi`

libiocs_a-ms_offtm.o: ms_offtm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_offtm.o `test -f 'ms_offtm.S' || echo '$(srcdir)/'`ms_offtm.S

libiocs_a-ms_offtm.obj: ms_offtm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_offtm.obj `if test -f 'ms_offtm.S'; then $(CYGPATH_W) 'ms_offtm.S'; else $(CYGPATH_W) '$(srcdir)/ms_offtm.S'; fi`

libiocs_a-ms_ontm.o: ms_ontm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_ontm.o `test -f 'ms_ontm.S' || echo '$(srcdir)/'`ms_ontm.S

libiocs_a-ms_ontm.obj: ms_ontm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_ontm.obj `if test -f 'ms_ontm.S'; then $(CYGPATH_W) 'ms_ontm.S'; else $(CYGPATH_W) '$(srcdir)/ms_ontm.S'; fi`

libiocs_a-ms_patst.o: ms_patst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_patst.o `test -f 'ms_patst.S' || echo '$(srcdir)/'`ms_patst.S

libiocs_a-ms_patst.obj: ms_patst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_patst.obj `if test -f 'ms_patst.S'; then $(CYGPATH_W) 'ms_patst.S'; else $(CYGPATH_W) '$(srcdir)/ms_patst.S'; fi`

libiocs_a-ms_sel.o: ms_sel.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_sel.o `test -f 'ms_sel.S' || echo '$(srcdir)/'`ms_sel.S

libiocs_a-ms_sel.obj: ms_sel.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_sel.obj `if test -f 'ms_sel.S'; then $(CYGPATH_W) 'ms_sel.S'; else $(CYGPATH_W) '$(srcdir)/ms_sel.S'; fi`

libiocs_a-ms_sel2.o: ms_sel2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_sel2.o `test -f 'ms_sel2.S' || echo '$(srcdir)/'`ms_sel2.S

libiocs_a-ms_sel2.obj: ms_sel2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_sel2.obj `if test -f 'ms_sel2.S'; then $(CYGPATH_W) 'ms_sel2.S'; else $(CYGPATH_W) '$(srcdir)/ms_sel2.S'; fi`

libiocs_a-ms_stat.o: ms_stat.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_stat.o `test -f 'ms_stat.S' || echo '$(srcdir)/'`ms_stat.S

libiocs_a-ms_stat.obj: ms_stat.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ms_stat.obj `if test -f 'ms_stat.S'; then $(CYGPATH_W) 'ms_stat.S'; else $(CYGPATH_W) '$(srcdir)/ms_stat.S'; fi`

libiocs_a-ontime.o: ontime.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ontime.o `test -f 'ontime.S' || echo '$(srcdir)/'`ontime.S

libiocs_a-ontime.obj: ontime.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-ontime.obj `if test -f 'ontime.S'; then $(CYGPATH_W) 'ontime.S'; else $(CYGPATH_W) '$(srcdir)/ontime.S'; fi`

libiocs_a-opmintst.o: opmintst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-opmintst.o `test -f 'opmintst.S' || echo '$(srcdir)/'`opmintst.S

libiocs_a-opmintst.obj: opmintst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-opmintst.obj `if test -f 'opmintst.S'; then $(CYGPATH_W) 'opmintst.S'; else $(CYGPATH_W) '$(srcdir)/opmintst.S'; fi`

libiocs_a-opmset.o: opmset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-opmset.o `test -f 'opmset.S' || echo '$(srcdir)/'`opmset.S

libiocs_a-opmset.obj: opmset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-opmset.obj `if test -f 'opmset.S'; then $(CYGPATH_W) 'opmset.S'; else $(CYGPATH_W) '$(srcdir)/opmset.S'; fi`

libiocs_a-opmsns.o: opmsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-opmsns.o `test -f 'opmsns.S' || echo '$(srcdir)/'`opmsns.S

libiocs_a-opmsns.obj: opmsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-opmsns.obj `if test -f 'opmsns.S'; then $(CYGPATH_W) 'opmsns.S'; else $(CYGPATH_W) '$(srcdir)/opmsns.S'; fi`

libiocs_a-os_curof.o: os_curof.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-os_curof.o `test -f 'os_curof.S' || echo '$(srcdir)/'`os_curof.S

libiocs_a-os_curof.obj: os_curof.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-os_curof.obj `if test -f 'os_curof.S'; then $(CYGPATH_W) 'os_curof.S'; else $(CYGPATH_W) '$(srcdir)/os_curof.S'; fi`

libiocs_a-os_curon.o: os_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-os_curon.o `test -f 'os_curon.S' || echo '$(srcdir)/'`os_curon.S

libiocs_a-os_curon.obj: os_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-os_curon.obj `if test -f 'os_curon.S'; then $(CYGPATH_W) 'os_curon.S'; else $(CYGPATH_W) '$(srcdir)/os_curon.S'; fi`

libiocs_a-osns232c.o: osns232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-osns232c.o `test -f 'osns232c.S' || echo '$(srcdir)/'`osns232c.S

libiocs_a-osns232c.obj: osns232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-osns232c.obj `if test -f 'osns232c.S'; then $(CYGPATH_W) 'osns232c.S'; else $(CYGPATH_W) '$(srcdir)/osns232c.S'; fi`

libiocs_a-out232c.o: out232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-out232c.o `test -f 'out232c.S' || echo '$(srcdir)/'`out232c.S

libiocs_a-out232c.obj: out232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-out232c.obj `if test -f 'out232c.S'; then $(CYGPATH_W) 'out232c.S'; else $(CYGPATH_W) '$(srcdir)/out232c.S'; fi`

libiocs_a-outlpt.o: outlpt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-outlpt.o `test -f 'outlpt.S' || echo '$(srcdir)/'`outlpt.S

libiocs_a-outlpt.obj: outlpt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-outlpt.obj `if test -f 'outlpt.S'; then $(CYGPATH_W) 'outlpt.S'; else $(CYGPATH_W) '$(srcdir)/outlpt.S'; fi`

libiocs_a-outprn.o: outprn.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-outprn.o `test -f 'outprn.S' || echo '$(srcdir)/'`outprn.S

libiocs_a-outprn.obj: outprn.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-outprn.obj `if test -f 'outprn.S'; then $(CYGPATH_W) 'outprn.S'; else $(CYGPATH_W) '$(srcdir)/outprn.S'; fi`

libiocs_a-paint.o: paint.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-paint.o `test -f 'paint.S' || echo '$(srcdir)/'`paint.S

libiocs_a-paint.obj: paint.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-paint.obj `if test -f 'paint.S'; then $(CYGPATH_W) 'paint.S'; else $(CYGPATH_W) '$(srcdir)/paint.S'; fi`

libiocs_a-point.o: point.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-point.o `test -f 'point.S' || echo '$(srcdir)/'`point.S

libiocs_a-point.obj: point.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-point.obj `if test -f 'point.S'; then $(CYGPATH_W) 'point.S'; else $(CYGPATH_W) '$(srcdir)/point.S'; fi`

libiocs_a-prnintst.o: prnintst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-prnintst.o `test -f 'prnintst.S' || echo '$(srcdir)/'`prnintst.S

libiocs_a-prnintst.obj: prnintst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-prnintst.obj `if test -f 'prnintst.S'; then $(CYGPATH_W) 'prnintst.S'; else $(CYGPATH_W) '$(srcdir)/prnintst.S'; fi`

libiocs_a-pset.o: pset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-pset.o `test -f 'pset.S' || echo '$(srcdir)/'`pset.S

libiocs_a-pset.obj: pset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-pset.obj `if test -f 'pset.S'; then $(CYGPATH_W) 'pset.S'; else $(CYGPATH_W) '$(srcdir)/pset.S'; fi`

libiocs_a-putgrm.o: putgrm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-putgrm.o `test -f 'putgrm.S' || echo '$(srcdir)/'`putgrm.S

libiocs_a-putgrm.obj: putgrm.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-putgrm.obj `if test -f 'putgrm.S'; then $(CYGPATH_W) 'putgrm.S'; else $(CYGPATH_W) '$(srcdir)/putgrm.S'; fi`

libiocs_a-rmacnv.o: rmacnv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-rmacnv.o `test -f 'rmacnv.S' || echo '$(srcdir)/'`rmacnv.S

libiocs_a-rmacnv.obj: rmacnv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-rmacnv.obj `if test -f 'rmacnv.S'; then $(CYGPATH_W) 'rmacnv.S'; else $(CYGPATH_W) '$(srcdir)/rmacnv.S'; fi`

libiocs_a-romver.o: romver.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-romver.o `test -f 'romver.S' || echo '$(srcdir)/'`romver.S

libiocs_a-romver.obj: romver.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-romver.obj `if test -f 'romver.S'; then $(CYGPATH_W) 'romver.S'; else $(CYGPATH_W) '$(srcdir)/romver.S'; fi`

libiocs_a-s_cmdout.o: s_cmdout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_cmdout.o `test -f 's_cmdout.S' || echo '$(srcdir)/'`s_cmdout.S

libiocs_a-s_cmdout.obj: s_cmdout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_cmdout.obj `if test -f 's_cmdout.S'; then $(CYGPATH_W) 's_cmdout.S'; else $(CYGPATH_W) '$(srcdir)/s_cmdout.S'; fi`

libiocs_a-s_datain.o: s_datain.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_datain.o `test -f 's_datain.S' || echo '$(srcdir)/'`s_datain.S

libiocs_a-s_datain.obj: s_datain.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_datain.obj `if test -f 's_datain.S'; then $(CYGPATH_W) 's_datain.S'; else $(CYGPATH_W) '$(srcdir)/s_datain.S'; fi`

libiocs_a-s_dataout.o: s_dataout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_dataout.o `test -f 's_dataout.S' || echo '$(srcdir)/'`s_dataout.S

libiocs_a-s_dataout.obj: s_dataout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_dataout.obj `if test -f 's_dataout.S'; then $(CYGPATH_W) 's_dataout.S'; else $(CYGPATH_W) '$(srcdir)/s_dataout.S'; fi`

libiocs_a-s_format.o: s_format.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_format.o `test -f 's_format.S' || echo '$(srcdir)/'`s_format.S

libiocs_a-s_format.obj: s_format.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_format.obj `if test -f 's_format.S'; then $(CYGPATH_W) 's_format.S'; else $(CYGPATH_W) '$(srcdir)/s_format.S'; fi`

libiocs_a-s_inquiry.o: s_inquiry.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_inquiry.o `test -f 's_inquiry.S' || echo '$(srcdir)/'`s_inquiry.S

libiocs_a-s_inquiry.obj: s_inquiry.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_inquiry.obj `if test -f 's_inquiry.S'; then $(CYGPATH_W) 's_inquiry.S'; else $(CYGPATH_W) '$(srcdir)/s_inquiry.S'; fi`

libiocs_a-s_msgin.o: s_msgin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_msgin.o `test -f 's_msgin.S' || echo '$(srcdir)/'`s_msgin.S

libiocs_a-s_msgin.obj: s_msgin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_msgin.obj `if test -f 's_msgin.S'; then $(CYGPATH_W) 's_msgin.S'; else $(CYGPATH_W) '$(srcdir)/s_msgin.S'; fi`

libiocs_a-s_msgout.o: s_msgout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_msgout.o `test -f 's_msgout.S' || echo '$(srcdir)/'`s_msgout.S

libiocs_a-s_msgout.obj: s_msgout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_msgout.obj `if test -f 's_msgout.S'; then $(CYGPATH_W) 's_msgout.S'; else $(CYGPATH_W) '$(srcdir)/s_msgout.S'; fi`

libiocs_a-s_pamedium.o: s_pamedium.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_pamedium.o `test -f 's_pamedium.S' || echo '$(srcdir)/'`s_pamedium.S

libiocs_a-s_pamedium.obj: s_pamedium.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_pamedium.obj `if test -f 's_pamedium.S'; then $(CYGPATH_W) 's_pamedium.S'; else $(CYGPATH_W) '$(srcdir)/s_pamedium.S'; fi`

libiocs_a-s_phase.o: s_phase.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_phase.o `test -f 's_phase.S' || echo '$(srcdir)/'`s_phase.S

libiocs_a-s_phase.obj: s_phase.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_phase.obj `if test -f 's_phase.S'; then $(CYGPATH_W) 's_phase.S'; else $(CYGPATH_W) '$(srcdir)/s_phase.S'; fi`

libiocs_a-s_read.o: s_read.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_read.o `test -f 's_read.S' || echo '$(srcdir)/'`s_read.S

libiocs_a-s_read.obj: s_read.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_read.obj `if test -f 's_read.S'; then $(CYGPATH_W) 's_read.S'; else $(CYGPATH_W) '$(srcdir)/s_read.S'; fi`

libiocs_a-s_readcap.o: s_readcap.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_readcap.o `test -f 's_readcap.S' || echo '$(srcdir)/'`s_readcap.S

libiocs_a-s_readcap.obj: s_readcap.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_readcap.obj `if test -f 's_readcap.S'; then $(CYGPATH_W) 's_readcap.S'; else $(CYGPATH_W) '$(srcdir)/s_readcap.S'; fi`

libiocs_a-s_readext.o: s_readext.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_readext.o `test -f 's_readext.S' || echo '$(srcdir)/'`s_readext.S

libiocs_a-s_readext.obj: s_readext.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_readext.obj `if test -f 's_readext.S'; then $(CYGPATH_W) 's_readext.S'; else $(CYGPATH_W) '$(srcdir)/s_readext.S'; fi`

libiocs_a-s_reassign.o: s_reassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_reassign.o `test -f 's_reassign.S' || echo '$(srcdir)/'`s_reassign.S

libiocs_a-s_reassign.obj: s_reassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_reassign.obj `if test -f 's_reassign.S'; then $(CYGPATH_W) 's_reassign.S'; else $(CYGPATH_W) '$(srcdir)/s_reassign.S'; fi`

libiocs_a-s_request.o: s_request.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_request.o `test -f 's_request.S' || echo '$(srcdir)/'`s_request.S

libiocs_a-s_request.obj: s_request.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_request.obj `if test -f 's_request.S'; then $(CYGPATH_W) 's_request.S'; else $(CYGPATH_W) '$(srcdir)/s_request.S'; fi`

libiocs_a-s_reset.o: s_reset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_reset.o `test -f 's_reset.S' || echo '$(srcdir)/'`s_reset.S

libiocs_a-s_reset.obj: s_reset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_reset.obj `if test -f 's_reset.S'; then $(CYGPATH_W) 's_reset.S'; else $(CYGPATH_W) '$(srcdir)/s_reset.S'; fi`

libiocs_a-s_rezerounit.o: s_rezerounit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_rezerounit.o `test -f 's_rezerounit.S' || echo '$(srcdir)/'`s_rezerounit.S

libiocs_a-s_rezerounit.obj: s_rezerounit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_rezerounit.obj `if test -f 's_rezerounit.S'; then $(CYGPATH_W) 's_rezerounit.S'; else $(CYGPATH_W) '$(srcdir)/s_rezerounit.S'; fi`

libiocs_a-s_seek.o: s_seek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_seek.o `test -f 's_seek.S' || echo '$(srcdir)/'`s_seek.S

libiocs_a-s_seek.obj: s_seek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_seek.obj `if test -f 's_seek.S'; then $(CYGPATH_W) 's_seek.S'; else $(CYGPATH_W) '$(srcdir)/s_seek.S'; fi`

libiocs_a-s_select.o: s_select.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_select.o `test -f 's_select.S' || echo '$(srcdir)/'`s_select.S

libiocs_a-s_select.obj: s_select.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_select.obj `if test -f 's_select.S'; then $(CYGPATH_W) 's_select.S'; else $(CYGPATH_W) '$(srcdir)/s_select.S'; fi`

libiocs_a-s_startstop.o: s_startstop.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_startstop.o `test -f 's_startstop.S' || echo '$(srcdir)/'`s_startstop.S

libiocs_a-s_startstop.obj: s_startstop.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_startstop.obj `if test -f 's_startstop.S'; then $(CYGPATH_W) 's_startstop.S'; else $(CYGPATH_W) '$(srcdir)/s_startstop.S'; fi`

libiocs_a-s_stsin.o: s_stsin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_stsin.o `test -f 's_stsin.S' || echo '$(srcdir)/'`s_stsin.S

libiocs_a-s_stsin.obj: s_stsin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_stsin.obj `if test -f 's_stsin.S'; then $(CYGPATH_W) 's_stsin.S'; else $(CYGPATH_W) '$(srcdir)/s_stsin.S'; fi`

libiocs_a-s_testunit.o: s_testunit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_testunit.o `test -f 's_testunit.S' || echo '$(srcdir)/'`s_testunit.S

libiocs_a-s_testunit.obj: s_testunit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_testunit.obj `if test -f 's_testunit.S'; then $(CYGPATH_W) 's_testunit.S'; else $(CYGPATH_W) '$(srcdir)/s_testunit.S'; fi`

libiocs_a-s_write.o: s_write.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_write.o `test -f 's_write.S' || echo '$(srcdir)/'`s_write.S

libiocs_a-s_write.obj: s_write.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_write.obj `if test -f 's_write.S'; then $(CYGPATH_W) 's_write.S'; else $(CYGPATH_W) '$(srcdir)/s_write.S'; fi`

libiocs_a-s_writeext.o: s_writeext.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_writeext.o `test -f 's_writeext.S' || echo '$(srcdir)/'`s_writeext.S

libiocs_a-s_writeext.obj: s_writeext.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-s_writeext.obj `if test -f 's_writeext.S'; then $(CYGPATH_W) 's_writeext.S'; else $(CYGPATH_W) '$(srcdir)/s_writeext.S'; fi`

libiocs_a-scroll.o: scroll.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-scroll.o `test -f 'scroll.S' || echo '$(srcdir)/'`scroll.S

libiocs_a-scroll.obj: scroll.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-scroll.obj `if test -f 'scroll.S'; then $(CYGPATH_W) 'scroll.S'; else $(CYGPATH_W) '$(srcdir)/scroll.S'; fi`

libiocs_a-set232c.o: set232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-set232c.o `test -f 'set232c.S' || echo '$(srcdir)/'`set232c.S

libiocs_a-set232c.obj: set232c.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-set232c.obj `if test -f 'set232c.S'; then $(CYGPATH_W) 'set232c.S'; else $(CYGPATH_W) '$(srcdir)/set232c.S'; fi`

libiocs_a-sftjis.o: sftjis.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sftjis.o `test -f 'sftjis.S' || echo '$(srcdir)/'`sftjis.S

libiocs_a-sftjis.obj: sftjis.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sftjis.obj `if test -f 'sftjis.S'; then $(CYGPATH_W) 'sftjis.S'; else $(CYGPATH_W) '$(srcdir)/sftjis.S'; fi`

libiocs_a-skey_mod.o: skey_mod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-skey_mod.o `test -f 'skey_mod.S' || echo '$(srcdir)/'`skey_mod.S

libiocs_a-skey_mod.obj: skey_mod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-skey_mod.obj `if test -f 'skey_mod.S'; then $(CYGPATH_W) 'skey_mod.S'; else $(CYGPATH_W) '$(srcdir)/skey_mod.S'; fi`

libiocs_a-skeyset.o: skeyset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-skeyset.o `test -f 'skeyset.S' || echo '$(srcdir)/'`skeyset.S

libiocs_a-skeyset.obj: skeyset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-skeyset.obj `if test -f 'skeyset.S'; then $(CYGPATH_W) 'skeyset.S'; else $(CYGPATH_W) '$(srcdir)/skeyset.S'; fi`

libiocs_a-snsprn.o: snsprn.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-snsprn.o `test -f 'snsprn.S' || echo '$(srcdir)/'`snsprn.S

libiocs_a-snsprn.obj: snsprn.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-snsprn.obj `if test -f 'snsprn.S'; then $(CYGPATH_W) 'snsprn.S'; else $(CYGPATH_W) '$(srcdir)/snsprn.S'; fi`

libiocs_a-sp_cgclr.o: sp_cgclr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_cgclr.o `test -f 'sp_cgclr.S' || echo '$(srcdir)/'`sp_cgclr.S

libiocs_a-sp_cgclr.obj: sp_cgclr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_cgclr.obj `if test -f 'sp_cgclr.S'; then $(CYGPATH_W) 'sp_cgclr.S'; else $(CYGPATH_W) '$(srcdir)/sp_cgclr.S'; fi`

libiocs_a-sp_defcg.o: sp_defcg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_defcg.o `test -f 'sp_defcg.S' || echo '$(srcdir)/'`sp_defcg.S

libiocs_a-sp_defcg.obj: sp_defcg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_defcg.obj `if test -f 'sp_defcg.S'; then $(CYGPATH_W) 'sp_defcg.S'; else $(CYGPATH_W) '$(srcdir)/sp_defcg.S'; fi`

libiocs_a-sp_gtpcg.o: sp_gtpcg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_gtpcg.o `test -f 'sp_gtpcg.S' || echo '$(srcdir)/'`sp_gtpcg.S

libiocs_a-sp_gtpcg.obj: sp_gtpcg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_gtpcg.obj `if test -f 'sp_gtpcg.S'; then $(CYGPATH_W) 'sp_gtpcg.S'; else $(CYGPATH_W) '$(srcdir)/sp_gtpcg.S'; fi`

libiocs_a-sp_init.o: sp_init.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_init.o `test -f 'sp_init.S' || echo '$(srcdir)/'`sp_init.S

libiocs_a-sp_init.obj: sp_init.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_init.obj `if test -f 'sp_init.S'; then $(CYGPATH_W) 'sp_init.S'; else $(CYGPATH_W) '$(srcdir)/sp_init.S'; fi`

libiocs_a-sp_off.o: sp_off.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_off.o `test -f 'sp_off.S' || echo '$(srcdir)/'`sp_off.S

libiocs_a-sp_off.obj: sp_off.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_off.obj `if test -f 'sp_off.S'; then $(CYGPATH_W) 'sp_off.S'; else $(CYGPATH_W) '$(srcdir)/sp_off.S'; fi`

libiocs_a-sp_on.o: sp_on.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_on.o `test -f 'sp_on.S' || echo '$(srcdir)/'`sp_on.S

libiocs_a-sp_on.obj: sp_on.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_on.obj `if test -f 'sp_on.S'; then $(CYGPATH_W) 'sp_on.S'; else $(CYGPATH_W) '$(srcdir)/sp_on.S'; fi`

libiocs_a-sp_reggt.o: sp_reggt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_reggt.o `test -f 'sp_reggt.S' || echo '$(srcdir)/'`sp_reggt.S

libiocs_a-sp_reggt.obj: sp_reggt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_reggt.obj `if test -f 'sp_reggt.S'; then $(CYGPATH_W) 'sp_reggt.S'; else $(CYGPATH_W) '$(srcdir)/sp_reggt.S'; fi`

libiocs_a-sp_regst.o: sp_regst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_regst.o `test -f 'sp_regst.S' || echo '$(srcdir)/'`sp_regst.S

libiocs_a-sp_regst.obj: sp_regst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-sp_regst.obj `if test -f 'sp_regst.S'; then $(CYGPATH_W) 'sp_regst.S'; else $(CYGPATH_W) '$(srcdir)/sp_regst.S'; fi`

libiocs_a-spalet.o: spalet.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-spalet.o `test -f 'spalet.S' || echo '$(srcdir)/'`spalet.S

libiocs_a-spalet.obj: spalet.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-spalet.obj `if test -f 'spalet.S'; then $(CYGPATH_W) 'spalet.S'; else $(CYGPATH_W) '$(srcdir)/spalet.S'; fi`

libiocs_a-symbol.o: symbol.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-symbol.o `test -f 'symbol.S' || echo '$(srcdir)/'`symbol.S

libiocs_a-symbol.obj: symbol.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-symbol.obj `if test -f 'symbol.S'; then $(CYGPATH_W) 'symbol.S'; else $(CYGPATH_W) '$(srcdir)/symbol.S'; fi`

libiocs_a-tcolor.o: tcolor.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tcolor.o `test -f 'tcolor.S' || echo '$(srcdir)/'`tcolor.S

libiocs_a-tcolor.obj: tcolor.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tcolor.obj `if test -f 'tcolor.S'; then $(CYGPATH_W) 'tcolor.S'; else $(CYGPATH_W) '$(srcdir)/tcolor.S'; fi`

libiocs_a-textget.o: textget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-textget.o `test -f 'textget.S' || echo '$(srcdir)/'`textget.S

libiocs_a-textget.obj: textget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-textget.obj `if test -f 'textget.S'; then $(CYGPATH_W) 'textget.S'; else $(CYGPATH_W) '$(srcdir)/textget.S'; fi`

libiocs_a-textput.o: textput.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-textput.o `test -f 'textput.S' || echo '$(srcdir)/'`textput.S

libiocs_a-textput.obj: textput.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-textput.obj `if test -f 'textput.S'; then $(CYGPATH_W) 'textput.S'; else $(CYGPATH_W) '$(srcdir)/textput.S'; fi`

libiocs_a-tgusemd.o: tgusemd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tgusemd.o `test -f 'tgusemd.S' || echo '$(srcdir)/'`tgusemd.S

libiocs_a-tgusemd.obj: tgusemd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tgusemd.obj `if test -f 'tgusemd.S'; then $(CYGPATH_W) 'tgusemd.S'; else $(CYGPATH_W) '$(srcdir)/tgusemd.S'; fi`

libiocs_a-timeasc.o: timeasc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timeasc.o `test -f 'timeasc.S' || echo '$(srcdir)/'`timeasc.S

libiocs_a-timeasc.obj: timeasc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timeasc.obj `if test -f 'timeasc.S'; then $(CYGPATH_W) 'timeasc.S'; else $(CYGPATH_W) '$(srcdir)/timeasc.S'; fi`

libiocs_a-timebcd.o: timebcd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timebcd.o `test -f 'timebcd.S' || echo '$(srcdir)/'`timebcd.S

libiocs_a-timebcd.obj: timebcd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timebcd.obj `if test -f 'timebcd.S'; then $(CYGPATH_W) 'timebcd.S'; else $(CYGPATH_W) '$(srcdir)/timebcd.S'; fi`

libiocs_a-timebin.o: timebin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timebin.o `test -f 'timebin.S' || echo '$(srcdir)/'`timebin.S

libiocs_a-timebin.obj: timebin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timebin.obj `if test -f 'timebin.S'; then $(CYGPATH_W) 'timebin.S'; else $(CYGPATH_W) '$(srcdir)/timebin.S'; fi`

libiocs_a-timecnv.o: timecnv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timecnv.o `test -f 'timecnv.S' || echo '$(srcdir)/'`timecnv.S

libiocs_a-timecnv.obj: timecnv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timecnv.obj `if test -f 'timecnv.S'; then $(CYGPATH_W) 'timecnv.S'; else $(CYGPATH_W) '$(srcdir)/timecnv.S'; fi`

libiocs_a-timeget.o: timeget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timeget.o `test -f 'timeget.S' || echo '$(srcdir)/'`timeget.S

libiocs_a-timeget.obj: timeget.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timeget.obj `if test -f 'timeget.S'; then $(CYGPATH_W) 'timeget.S'; else $(CYGPATH_W) '$(srcdir)/timeget.S'; fi`

libiocs_a-timerdst.o: timerdst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timerdst.o `test -f 'timerdst.S' || echo '$(srcdir)/'`timerdst.S

libiocs_a-timerdst.obj: timerdst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timerdst.obj `if test -f 'timerdst.S'; then $(CYGPATH_W) 'timerdst.S'; else $(CYGPATH_W) '$(srcdir)/timerdst.S'; fi`

libiocs_a-timeset.o: timeset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timeset.o `test -f 'timeset.S' || echo '$(srcdir)/'`timeset.S

libiocs_a-timeset.obj: timeset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-timeset.obj `if test -f 'timeset.S'; then $(CYGPATH_W) 'timeset.S'; else $(CYGPATH_W) '$(srcdir)/timeset.S'; fi`

libiocs_a-tpalet.o: tpalet.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tpalet.o `test -f 'tpalet.S' || echo '$(srcdir)/'`tpalet.S

libiocs_a-tpalet.obj: tpalet.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tpalet.obj `if test -f 'tpalet.S'; then $(CYGPATH_W) 'tpalet.S'; else $(CYGPATH_W) '$(srcdir)/tpalet.S'; fi`

libiocs_a-tpalet2.o: tpalet2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tpalet2.o `test -f 'tpalet2.S' || echo '$(srcdir)/'`tpalet2.S

libiocs_a-tpalet2.obj: tpalet2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tpalet2.obj `if test -f 'tpalet2.S'; then $(CYGPATH_W) 'tpalet2.S'; else $(CYGPATH_W) '$(srcdir)/tpalet2.S'; fi`

libiocs_a-trap15.o: trap15.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-trap15.o `test -f 'trap15.S' || echo '$(srcdir)/'`trap15.S

libiocs_a-trap15.obj: trap15.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-trap15.obj `if test -f 'trap15.S'; then $(CYGPATH_W) 'trap15.S'; else $(CYGPATH_W) '$(srcdir)/trap15.S'; fi`

libiocs_a-tvctrl.o: tvctrl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tvctrl.o `test -f 'tvctrl.S' || echo '$(srcdir)/'`tvctrl.S

libiocs_a-tvctrl.obj: tvctrl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-tvctrl.obj `if test -f 'tvctrl.S'; then $(CYGPATH_W) 'tvctrl.S'; else $(CYGPATH_W) '$(srcdir)/tvctrl.S'; fi`

libiocs_a-txbox.o: txbox.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txbox.o `test -f 'txbox.S' || echo '$(srcdir)/'`txbox.S

libiocs_a-txbox.obj: txbox.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txbox.obj `if test -f 'txbox.S'; then $(CYGPATH_W) 'txbox.S'; else $(CYGPATH_W) '$(srcdir)/txbox.S'; fi`

libiocs_a-txfill.o: txfill.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txfill.o `test -f 'txfill.S' || echo '$(srcdir)/'`txfill.S

libiocs_a-txfill.obj: txfill.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txfill.obj `if test -f 'txfill.S'; then $(CYGPATH_W) 'txfill.S'; else $(CYGPATH_W) '$(srcdir)/txfill.S'; fi`

libiocs_a-txline.o: txline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txline.o `test -f 'txline.S' || echo '$(srcdir)/'`txline.S

libiocs_a-txline.obj: txline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txline.obj `if test -f 'txline.S'; then $(CYGPATH_W) 'txline.S'; else $(CYGPATH_W) '$(srcdir)/txline.S'; fi`

libiocs_a-txrascpy.o: txrascpy.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txrascpy.o `test -f 'txrascpy.S' || echo '$(srcdir)/'`txrascpy.S

libiocs_a-txrascpy.obj: txrascpy.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txrascpy.obj `if test -f 'txrascpy.S'; then $(CYGPATH_W) 'txrascpy.S'; else $(CYGPATH_W) '$(srcdir)/txrascpy.S'; fi`

libiocs_a-txrev.o: txrev.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txrev.o `test -f 'txrev.S' || echo '$(srcdir)/'`txrev.S

libiocs_a-txrev.obj: txrev.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txrev.obj `if test -f 'txrev.S'; then $(CYGPATH_W) 'txrev.S'; else $(CYGPATH_W) '$(srcdir)/txrev.S'; fi`

libiocs_a-txxline.o: txxline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txxline.o `test -f 'txxline.S' || echo '$(srcdir)/'`txxline.S

libiocs_a-txxline.obj: txxline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txxline.obj `if test -f 'txxline.S'; then $(CYGPATH_W) 'txxline.S'; else $(CYGPATH_W) '$(srcdir)/txxline.S'; fi`

libiocs_a-txyline.o: txyline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txyline.o `test -f 'txyline.S' || echo '$(srcdir)/'`txyline.S

libiocs_a-txyline.obj: txyline.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-txyline.obj `if test -f 'txyline.S'; then $(CYGPATH_W) 'txyline.S'; else $(CYGPATH_W) '$(srcdir)/txyline.S'; fi`

libiocs_a-vdispst.o: vdispst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-vdispst.o `test -f 'vdispst.S' || echo '$(srcdir)/'`vdispst.S

libiocs_a-vdispst.obj: vdispst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-vdispst.obj `if test -f 'vdispst.S'; then $(CYGPATH_W) 'vdispst.S'; else $(CYGPATH_W) '$(srcdir)/vdispst.S'; fi`

libiocs_a-vpage.o: vpage.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-vpage.o `test -f 'vpage.S' || echo '$(srcdir)/'`vpage.S

libiocs_a-vpage.obj: vpage.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-vpage.obj `if test -f 'vpage.S'; then $(CYGPATH_W) 'vpage.S'; else $(CYGPATH_W) '$(srcdir)/vpage.S'; fi`

libiocs_a-window.o: window.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-window.o `test -f 'window.S' || echo '$(srcdir)/'`window.S

libiocs_a-window.obj: window.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-window.obj `if test -f 'window.S'; then $(CYGPATH_W) 'window.S'; else $(CYGPATH_W) '$(srcdir)/window.S'; fi`

libiocs_a-wipe.o: wipe.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-wipe.o `test -f 'wipe.S' || echo '$(srcdir)/'`wipe.S

libiocs_a-wipe.obj: wipe.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libiocs_a_CCASFLAGS) $(CCASFLAGS) -c -o libiocs_a-wipe.obj `if test -f 'wipe.S'; then $(CYGPATH_W) 'wipe.S'; else $(CYGPATH_W) '$(srcdir)/wipe.S'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am:
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(toollibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-toollibLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-toollibLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-toollibLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-toollibLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip install-toollibLIBRARIES \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-toollibLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
