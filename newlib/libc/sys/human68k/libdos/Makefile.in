# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = libdos
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/../../../acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/../../../../mkinstalldirs
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(toollibdir)"
LIBRARIES = $(toollib_LIBRARIES)
ARFLAGS = cru
libdos_a_AR = $(AR) $(ARFLAGS)
libdos_a_LIBADD =
am__objects_1 = libdos_a-allclose.$(OBJEXT) libdos_a-bindno.$(OBJEXT) \
	libdos_a-breakck.$(OBJEXT) libdos_a-c_cls_al.$(OBJEXT) \
	libdos_a-c_cls_ed.$(OBJEXT) libdos_a-c_cls_st.$(OBJEXT) \
	libdos_a-c_color.$(OBJEXT) libdos_a-c_curoff.$(OBJEXT) \
	libdos_a-c_curon.$(OBJEXT) libdos_a-c_del.$(OBJEXT) \
	libdos_a-c_down.$(OBJEXT) libdos_a-c_down_s.$(OBJEXT) \
	libdos_a-c_era_al.$(OBJEXT) libdos_a-c_era_ed.$(OBJEXT) \
	libdos_a-c_era_st.$(OBJEXT) libdos_a-c_fnkmod.$(OBJEXT) \
	libdos_a-c_ins.$(OBJEXT) libdos_a-c_left.$(OBJEXT) \
	libdos_a-c_locate.$(OBJEXT) libdos_a-c_print.$(OBJEXT) \
	libdos_a-c_putc.$(OBJEXT) libdos_a-c_right.$(OBJEXT) \
	libdos_a-c_up.$(OBJEXT) libdos_a-c_up_s.$(OBJEXT) \
	libdos_a-c_width.$(OBJEXT) libdos_a-c_window.$(OBJEXT) \
	libdos_a-change_pr.$(OBJEXT) libdos_a-chdir.$(OBJEXT) \
	libdos_a-chgdrv.$(OBJEXT) libdos_a-chmod.$(OBJEXT) \
	libdos_a-cinsns.$(OBJEXT) libdos_a-close.$(OBJEXT) \
	libdos_a-cominp.$(OBJEXT) libdos_a-common_ck.$(OBJEXT) \
	libdos_a-common_del.$(OBJEXT) libdos_a-common_fre.$(OBJEXT) \
	libdos_a-common_lk.$(OBJEXT) libdos_a-common_rd.$(OBJEXT) \
	libdos_a-common_wt.$(OBJEXT) libdos_a-comout.$(OBJEXT) \
	libdos_a-consns.$(OBJEXT) libdos_a-coutsns.$(OBJEXT) \
	libdos_a-create.$(OBJEXT) libdos_a-ctlabort.$(OBJEXT) \
	libdos_a-curdir.$(OBJEXT) libdos_a-curdrv.$(OBJEXT) \
	libdos_a-delete.$(OBJEXT) libdos_a-diskred.$(OBJEXT) \
	libdos_a-diskred2.$(OBJEXT) libdos_a-diskwrt.$(OBJEXT) \
	libdos_a-diskwrt2.$(OBJEXT) libdos_a-drvctrl.$(OBJEXT) \
	libdos_a-drvxchg.$(OBJEXT) libdos_a-dskfre.$(OBJEXT) \
	libdos_a-dup.$(OBJEXT) libdos_a-dup0.$(OBJEXT) \
	libdos_a-dup2.$(OBJEXT) libdos_a-errabort.$(OBJEXT) \
	libdos_a-exec2.$(OBJEXT) libdos_a-execonly.$(OBJEXT) \
	libdos_a-exfiles.$(OBJEXT) libdos_a-exit.$(OBJEXT) \
	libdos_a-exit2.$(OBJEXT) libdos_a-exnfiles.$(OBJEXT) \
	libdos_a-fatchk.$(OBJEXT) libdos_a-fatchk2.$(OBJEXT) \
	libdos_a-fflush.$(OBJEXT) libdos_a-fflush_set.$(OBJEXT) \
	libdos_a-fgetc.$(OBJEXT) libdos_a-fgets.$(OBJEXT) \
	libdos_a-filedate.$(OBJEXT) libdos_a-files.$(OBJEXT) \
	libdos_a-fnckeygt.$(OBJEXT) libdos_a-fnckeyst.$(OBJEXT) \
	libdos_a-fputc.$(OBJEXT) libdos_a-fputs.$(OBJEXT) \
	libdos_a-get_fcb_adr.$(OBJEXT) libdos_a-get_pr.$(OBJEXT) \
	libdos_a-getassign.$(OBJEXT) libdos_a-getc.$(OBJEXT) \
	libdos_a-getchar.$(OBJEXT) libdos_a-getdate.$(OBJEXT) \
	libdos_a-getdpb.$(OBJEXT) libdos_a-getenv.$(OBJEXT) \
	libdos_a-getpdb.$(OBJEXT) libdos_a-gets.$(OBJEXT) \
	libdos_a-getss.$(OBJEXT) libdos_a-gettim2.$(OBJEXT) \
	libdos_a-gettime.$(OBJEXT) libdos_a-hendspic.$(OBJEXT) \
	libdos_a-hendspio.$(OBJEXT) libdos_a-hendspip.$(OBJEXT) \
	libdos_a-hendspir.$(OBJEXT) libdos_a-hendspmc.$(OBJEXT) \
	libdos_a-hendspmo.$(OBJEXT) libdos_a-hendspmp.$(OBJEXT) \
	libdos_a-hendspmr.$(OBJEXT) libdos_a-hendspsc.$(OBJEXT) \
	libdos_a-hendspso.$(OBJEXT) libdos_a-hendspsp.$(OBJEXT) \
	libdos_a-hendspsr.$(OBJEXT) libdos_a-indosflg.$(OBJEXT) \
	libdos_a-inkey.$(OBJEXT) libdos_a-inpout.$(OBJEXT) \
	libdos_a-intvcg.$(OBJEXT) libdos_a-intvcs.$(OBJEXT) \
	libdos_a-ioctrldvctl.$(OBJEXT) libdos_a-ioctrldvgt.$(OBJEXT) \
	libdos_a-ioctrlfdctl.$(OBJEXT) libdos_a-ioctrlfdgt.$(OBJEXT) \
	libdos_a-ioctrlgt.$(OBJEXT) libdos_a-ioctrlis.$(OBJEXT) \
	libdos_a-ioctrlos.$(OBJEXT) libdos_a-ioctrlrd.$(OBJEXT) \
	libdos_a-ioctrlrh.$(OBJEXT) libdos_a-ioctrlrtset.$(OBJEXT) \
	libdos_a-ioctrlst.$(OBJEXT) libdos_a-ioctrlwd.$(OBJEXT) \
	libdos_a-ioctrlwh.$(OBJEXT) libdos_a-k_insmod.$(OBJEXT) \
	libdos_a-k_keybit.$(OBJEXT) libdos_a-k_keyinp.$(OBJEXT) \
	libdos_a-k_keysns.$(OBJEXT) libdos_a-k_sftsns.$(OBJEXT) \
	libdos_a-keeppr.$(OBJEXT) libdos_a-keysns.$(OBJEXT) \
	libdos_a-kflushgc.$(OBJEXT) libdos_a-kflushgp.$(OBJEXT) \
	libdos_a-kflushgs.$(OBJEXT) libdos_a-kflushin.$(OBJEXT) \
	libdos_a-kflushio.$(OBJEXT) libdos_a-kill_pr.$(OBJEXT) \
	libdos_a-load.$(OBJEXT) libdos_a-loadexec.$(OBJEXT) \
	libdos_a-loadonly.$(OBJEXT) libdos_a-lock.$(OBJEXT) \
	libdos_a-makeassign.$(OBJEXT) libdos_a-maketmp.$(OBJEXT) \
	libdos_a-malloc.$(OBJEXT) libdos_a-malloc0.$(OBJEXT) \
	libdos_a-malloc2.$(OBJEXT) libdos_a-memcpy.$(OBJEXT) \
	libdos_a-mfree.$(OBJEXT) libdos_a-mkdir.$(OBJEXT) \
	libdos_a-move.$(OBJEXT) libdos_a-nameck.$(OBJEXT) \
	libdos_a-namests.$(OBJEXT) libdos_a-newfile.$(OBJEXT) \
	libdos_a-nfiles.$(OBJEXT) libdos_a-open.$(OBJEXT) \
	libdos_a-open_pr.$(OBJEXT) libdos_a-os_patch.$(OBJEXT) \
	libdos_a-pathchk.$(OBJEXT) libdos_a-print.$(OBJEXT) \
	libdos_a-prnout.$(OBJEXT) libdos_a-prnsns.$(OBJEXT) \
	libdos_a-pspset.$(OBJEXT) libdos_a-putchar.$(OBJEXT) \
	libdos_a-rassign.$(OBJEXT) libdos_a-read.$(OBJEXT) \
	libdos_a-retshell.$(OBJEXT) libdos_a-rmdir.$(OBJEXT) \
	libdos_a-s_malloc.$(OBJEXT) libdos_a-s_malloc0.$(OBJEXT) \
	libdos_a-s_mfree.$(OBJEXT) libdos_a-s_process.$(OBJEXT) \
	libdos_a-seek.$(OBJEXT) libdos_a-send_pr.$(OBJEXT) \
	libdos_a-setblock.$(OBJEXT) libdos_a-setdate.$(OBJEXT) \
	libdos_a-setenv.$(OBJEXT) libdos_a-setpdb.$(OBJEXT) \
	libdos_a-settim2.$(OBJEXT) libdos_a-settime.$(OBJEXT) \
	libdos_a-sleep_pr.$(OBJEXT) libdos_a-super.$(OBJEXT) \
	libdos_a-super_jsr.$(OBJEXT) libdos_a-suspend_pr.$(OBJEXT) \
	libdos_a-time_pr.$(OBJEXT) libdos_a-unlock.$(OBJEXT) \
	libdos_a-verify.$(OBJEXT) libdos_a-verifyg.$(OBJEXT) \
	libdos_a-vernum.$(OBJEXT) libdos_a-wait.$(OBJEXT) \
	libdos_a-write.$(OBJEXT)
am_libdos_a_OBJECTS = $(am__objects_1)
libdos_a_OBJECTS = $(am_libdos_a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp =
am__depfiles_maybe =
CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libdos_a_SOURCES)
ETAGS = etags
CTAGS = ctags
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CRT0 = @CRT0@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXTRA_SUBDIRS = @EXTRA_SUBDIRS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NEWLIB_CFLAGS = @NEWLIB_CFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
READELF = @READELF@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
aext = @aext@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libm_machine_dir = @libm_machine_dir@
localedir = @localedir@
localstatedir = @localstatedir@
lpfx = @lpfx@
machine_dir = @machine_dir@
mandir = @mandir@
mkdir_p = @mkdir_p@
newlib_basedir = @newlib_basedir@
oext = @oext@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sys_dir = @sys_dir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = cygnus
INCLUDES = -I$(srcdir)/../include $(NEWLIB_CFLAGS) $(CROSS_CFLAGS) $(TARGET_CFLAGS)
LIB_SOURCES = allclose.S bindno.S breakck.S c_cls_al.S c_cls_ed.S c_cls_st.S \
	c_color.S c_curoff.S c_curon.S c_del.S c_down.S c_down_s.S c_era_al.S \
	c_era_ed.S c_era_st.S c_fnkmod.S c_ins.S c_left.S c_locate.S \
	c_print.S c_putc.S c_right.S c_up.S c_up_s.S c_width.S c_window.S \
	change_pr.S chdir.S chgdrv.S chmod.S cinsns.S close.S cominp.S \
	common_ck.S common_del.S common_fre.S common_lk.S common_rd.S \
	common_wt.S comout.S consns.S coutsns.S create.S ctlabort.S curdir.S \
	curdrv.S delete.S diskred.S diskred2.S diskwrt.S diskwrt2.S drvctrl.S \
	drvxchg.S dskfre.S dup.S dup0.S dup2.S errabort.S exec2.S execonly.S \
	exfiles.S exit.S exit2.S exnfiles.S fatchk.S fatchk2.S fflush.S \
	fflush_set.S fgetc.S fgets.S filedate.S files.S fnckeygt.S fnckeyst.S \
	fputc.S fputs.S get_fcb_adr.S get_pr.S getassign.S getc.S getchar.S \
	getdate.S getdpb.S getenv.S getpdb.S gets.S getss.S gettim2.S \
	gettime.S hendspic.S hendspio.S hendspip.S hendspir.S hendspmc.S \
	hendspmo.S hendspmp.S hendspmr.S hendspsc.S hendspso.S hendspsp.S \
	hendspsr.S indosflg.S inkey.S inpout.S intvcg.S intvcs.S \
	ioctrldvctl.S ioctrldvgt.S ioctrlfdctl.S ioctrlfdgt.S ioctrlgt.S \
	ioctrlis.S ioctrlos.S ioctrlrd.S ioctrlrh.S ioctrlrtset.S ioctrlst.S \
	ioctrlwd.S ioctrlwh.S k_insmod.S k_keybit.S k_keyinp.S k_keysns.S \
	k_sftsns.S keeppr.S keysns.S kflushgc.S kflushgp.S kflushgs.S \
	kflushin.S kflushio.S kill_pr.S load.S loadexec.S loadonly.S lock.S \
	makeassign.S maketmp.S malloc.S malloc0.S malloc2.S memcpy.S mfree.S \
	mkdir.S move.S nameck.S namests.S newfile.S nfiles.S open.S \
	open_pr.S os_patch.S pathchk.S print.S prnout.S prnsns.S pspset.S \
	putchar.S rassign.S read.S retshell.S rmdir.S s_malloc.S s_malloc0.S \
	s_mfree.S s_process.S seek.S send_pr.S setblock.S setdate.S setenv.S \
	setpdb.S settim2.S settime.S sleep_pr.S super.S super_jsr.S \
	suspend_pr.S time_pr.S unlock.S verify.S verifyg.S vernum.S \
	wait.S write.S

toollibdir = $(top_toollibdir)
toollib_LIBRARIES = libdos.a
libdos_a_SOURCES = $(LIB_SOURCES)
libdos_a_CCASFLAGS = $(AM_CCASFLAGS)
ACLOCAL_AMFLAGS = -I ../../../.. -I ../../../../..
CONFIG_STATUS_DEPENDENCIES = $(newlib_basedir)/configure.host
all: all-am

.SUFFIXES:
.SUFFIXES: .S .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --cygnus libdos/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --cygnus libdos/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-toollibLIBRARIES: $(toollib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(toollibdir)" || $(MKDIR_P) "$(DESTDIR)$(toollibdir)"
	@list='$(toollib_LIBRARIES)'; test -n "$(toollibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(toollibdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(toollibdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(toollib_LIBRARIES)'; test -n "$(toollibdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(toollibdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(toollibdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-toollibLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(toollib_LIBRARIES)'; test -n "$(toollibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(toollibdir)' && rm -f "$$files" )"; \
	cd "$(DESTDIR)$(toollibdir)" && rm -f $$files

clean-toollibLIBRARIES:
	-test -z "$(toollib_LIBRARIES)" || rm -f $(toollib_LIBRARIES)
libdos.a: $(libdos_a_OBJECTS) $(libdos_a_DEPENDENCIES) 
	-rm -f libdos.a
	$(libdos_a_AR) libdos.a $(libdos_a_OBJECTS) $(libdos_a_LIBADD)
	$(RANLIB) libdos.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.S.o:
	$(CPPASCOMPILE) -c -o $@ $<

.S.obj:
	$(CPPASCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libdos_a-allclose.o: allclose.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-allclose.o `test -f 'allclose.S' || echo '$(srcdir)/'`allclose.S

libdos_a-allclose.obj: allclose.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-allclose.obj `if test -f 'allclose.S'; then $(CYGPATH_W) 'allclose.S'; else $(CYGPATH_W) '$(srcdir)/allclose.S'; fi`

libdos_a-bindno.o: bindno.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-bindno.o `test -f 'bindno.S' || echo '$(srcdir)/'`bindno.S

libdos_a-bindno.obj: bindno.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-bindno.obj `if test -f 'bindno.S'; then $(CYGPATH_W) 'bindno.S'; else $(CYGPATH_W) '$(srcdir)/bindno.S'; fi`

libdos_a-breakck.o: breakck.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-breakck.o `test -f 'breakck.S' || echo '$(srcdir)/'`breakck.S

libdos_a-breakck.obj: breakck.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-breakck.obj `if test -f 'breakck.S'; then $(CYGPATH_W) 'breakck.S'; else $(CYGPATH_W) '$(srcdir)/breakck.S'; fi`

libdos_a-c_cls_al.o: c_cls_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_cls_al.o `test -f 'c_cls_al.S' || echo '$(srcdir)/'`c_cls_al.S

libdos_a-c_cls_al.obj: c_cls_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_cls_al.obj `if test -f 'c_cls_al.S'; then $(CYGPATH_W) 'c_cls_al.S'; else $(CYGPATH_W) '$(srcdir)/c_cls_al.S'; fi`

libdos_a-c_cls_ed.o: c_cls_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_cls_ed.o `test -f 'c_cls_ed.S' || echo '$(srcdir)/'`c_cls_ed.S

libdos_a-c_cls_ed.obj: c_cls_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_cls_ed.obj `if test -f 'c_cls_ed.S'; then $(CYGPATH_W) 'c_cls_ed.S'; else $(CYGPATH_W) '$(srcdir)/c_cls_ed.S'; fi`

libdos_a-c_cls_st.o: c_cls_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_cls_st.o `test -f 'c_cls_st.S' || echo '$(srcdir)/'`c_cls_st.S

libdos_a-c_cls_st.obj: c_cls_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_cls_st.obj `if test -f 'c_cls_st.S'; then $(CYGPATH_W) 'c_cls_st.S'; else $(CYGPATH_W) '$(srcdir)/c_cls_st.S'; fi`

libdos_a-c_color.o: c_color.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_color.o `test -f 'c_color.S' || echo '$(srcdir)/'`c_color.S

libdos_a-c_color.obj: c_color.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_color.obj `if test -f 'c_color.S'; then $(CYGPATH_W) 'c_color.S'; else $(CYGPATH_W) '$(srcdir)/c_color.S'; fi`

libdos_a-c_curoff.o: c_curoff.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_curoff.o `test -f 'c_curoff.S' || echo '$(srcdir)/'`c_curoff.S

libdos_a-c_curoff.obj: c_curoff.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_curoff.obj `if test -f 'c_curoff.S'; then $(CYGPATH_W) 'c_curoff.S'; else $(CYGPATH_W) '$(srcdir)/c_curoff.S'; fi`

libdos_a-c_curon.o: c_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_curon.o `test -f 'c_curon.S' || echo '$(srcdir)/'`c_curon.S

libdos_a-c_curon.obj: c_curon.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_curon.obj `if test -f 'c_curon.S'; then $(CYGPATH_W) 'c_curon.S'; else $(CYGPATH_W) '$(srcdir)/c_curon.S'; fi`

libdos_a-c_del.o: c_del.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_del.o `test -f 'c_del.S' || echo '$(srcdir)/'`c_del.S

libdos_a-c_del.obj: c_del.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_del.obj `if test -f 'c_del.S'; then $(CYGPATH_W) 'c_del.S'; else $(CYGPATH_W) '$(srcdir)/c_del.S'; fi`

libdos_a-c_down.o: c_down.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_down.o `test -f 'c_down.S' || echo '$(srcdir)/'`c_down.S

libdos_a-c_down.obj: c_down.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_down.obj `if test -f 'c_down.S'; then $(CYGPATH_W) 'c_down.S'; else $(CYGPATH_W) '$(srcdir)/c_down.S'; fi`

libdos_a-c_down_s.o: c_down_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_down_s.o `test -f 'c_down_s.S' || echo '$(srcdir)/'`c_down_s.S

libdos_a-c_down_s.obj: c_down_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_down_s.obj `if test -f 'c_down_s.S'; then $(CYGPATH_W) 'c_down_s.S'; else $(CYGPATH_W) '$(srcdir)/c_down_s.S'; fi`

libdos_a-c_era_al.o: c_era_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_era_al.o `test -f 'c_era_al.S' || echo '$(srcdir)/'`c_era_al.S

libdos_a-c_era_al.obj: c_era_al.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_era_al.obj `if test -f 'c_era_al.S'; then $(CYGPATH_W) 'c_era_al.S'; else $(CYGPATH_W) '$(srcdir)/c_era_al.S'; fi`

libdos_a-c_era_ed.o: c_era_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_era_ed.o `test -f 'c_era_ed.S' || echo '$(srcdir)/'`c_era_ed.S

libdos_a-c_era_ed.obj: c_era_ed.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_era_ed.obj `if test -f 'c_era_ed.S'; then $(CYGPATH_W) 'c_era_ed.S'; else $(CYGPATH_W) '$(srcdir)/c_era_ed.S'; fi`

libdos_a-c_era_st.o: c_era_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_era_st.o `test -f 'c_era_st.S' || echo '$(srcdir)/'`c_era_st.S

libdos_a-c_era_st.obj: c_era_st.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_era_st.obj `if test -f 'c_era_st.S'; then $(CYGPATH_W) 'c_era_st.S'; else $(CYGPATH_W) '$(srcdir)/c_era_st.S'; fi`

libdos_a-c_fnkmod.o: c_fnkmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_fnkmod.o `test -f 'c_fnkmod.S' || echo '$(srcdir)/'`c_fnkmod.S

libdos_a-c_fnkmod.obj: c_fnkmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_fnkmod.obj `if test -f 'c_fnkmod.S'; then $(CYGPATH_W) 'c_fnkmod.S'; else $(CYGPATH_W) '$(srcdir)/c_fnkmod.S'; fi`

libdos_a-c_ins.o: c_ins.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_ins.o `test -f 'c_ins.S' || echo '$(srcdir)/'`c_ins.S

libdos_a-c_ins.obj: c_ins.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_ins.obj `if test -f 'c_ins.S'; then $(CYGPATH_W) 'c_ins.S'; else $(CYGPATH_W) '$(srcdir)/c_ins.S'; fi`

libdos_a-c_left.o: c_left.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_left.o `test -f 'c_left.S' || echo '$(srcdir)/'`c_left.S

libdos_a-c_left.obj: c_left.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_left.obj `if test -f 'c_left.S'; then $(CYGPATH_W) 'c_left.S'; else $(CYGPATH_W) '$(srcdir)/c_left.S'; fi`

libdos_a-c_locate.o: c_locate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_locate.o `test -f 'c_locate.S' || echo '$(srcdir)/'`c_locate.S

libdos_a-c_locate.obj: c_locate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_locate.obj `if test -f 'c_locate.S'; then $(CYGPATH_W) 'c_locate.S'; else $(CYGPATH_W) '$(srcdir)/c_locate.S'; fi`

libdos_a-c_print.o: c_print.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_print.o `test -f 'c_print.S' || echo '$(srcdir)/'`c_print.S

libdos_a-c_print.obj: c_print.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_print.obj `if test -f 'c_print.S'; then $(CYGPATH_W) 'c_print.S'; else $(CYGPATH_W) '$(srcdir)/c_print.S'; fi`

libdos_a-c_putc.o: c_putc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_putc.o `test -f 'c_putc.S' || echo '$(srcdir)/'`c_putc.S

libdos_a-c_putc.obj: c_putc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_putc.obj `if test -f 'c_putc.S'; then $(CYGPATH_W) 'c_putc.S'; else $(CYGPATH_W) '$(srcdir)/c_putc.S'; fi`

libdos_a-c_right.o: c_right.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_right.o `test -f 'c_right.S' || echo '$(srcdir)/'`c_right.S

libdos_a-c_right.obj: c_right.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_right.obj `if test -f 'c_right.S'; then $(CYGPATH_W) 'c_right.S'; else $(CYGPATH_W) '$(srcdir)/c_right.S'; fi`

libdos_a-c_up.o: c_up.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_up.o `test -f 'c_up.S' || echo '$(srcdir)/'`c_up.S

libdos_a-c_up.obj: c_up.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_up.obj `if test -f 'c_up.S'; then $(CYGPATH_W) 'c_up.S'; else $(CYGPATH_W) '$(srcdir)/c_up.S'; fi`

libdos_a-c_up_s.o: c_up_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_up_s.o `test -f 'c_up_s.S' || echo '$(srcdir)/'`c_up_s.S

libdos_a-c_up_s.obj: c_up_s.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_up_s.obj `if test -f 'c_up_s.S'; then $(CYGPATH_W) 'c_up_s.S'; else $(CYGPATH_W) '$(srcdir)/c_up_s.S'; fi`

libdos_a-c_width.o: c_width.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_width.o `test -f 'c_width.S' || echo '$(srcdir)/'`c_width.S

libdos_a-c_width.obj: c_width.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_width.obj `if test -f 'c_width.S'; then $(CYGPATH_W) 'c_width.S'; else $(CYGPATH_W) '$(srcdir)/c_width.S'; fi`

libdos_a-c_window.o: c_window.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_window.o `test -f 'c_window.S' || echo '$(srcdir)/'`c_window.S

libdos_a-c_window.obj: c_window.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-c_window.obj `if test -f 'c_window.S'; then $(CYGPATH_W) 'c_window.S'; else $(CYGPATH_W) '$(srcdir)/c_window.S'; fi`

libdos_a-change_pr.o: change_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-change_pr.o `test -f 'change_pr.S' || echo '$(srcdir)/'`change_pr.S

libdos_a-change_pr.obj: change_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-change_pr.obj `if test -f 'change_pr.S'; then $(CYGPATH_W) 'change_pr.S'; else $(CYGPATH_W) '$(srcdir)/change_pr.S'; fi`

libdos_a-chdir.o: chdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-chdir.o `test -f 'chdir.S' || echo '$(srcdir)/'`chdir.S

libdos_a-chdir.obj: chdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-chdir.obj `if test -f 'chdir.S'; then $(CYGPATH_W) 'chdir.S'; else $(CYGPATH_W) '$(srcdir)/chdir.S'; fi`

libdos_a-chgdrv.o: chgdrv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-chgdrv.o `test -f 'chgdrv.S' || echo '$(srcdir)/'`chgdrv.S

libdos_a-chgdrv.obj: chgdrv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-chgdrv.obj `if test -f 'chgdrv.S'; then $(CYGPATH_W) 'chgdrv.S'; else $(CYGPATH_W) '$(srcdir)/chgdrv.S'; fi`

libdos_a-chmod.o: chmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-chmod.o `test -f 'chmod.S' || echo '$(srcdir)/'`chmod.S

libdos_a-chmod.obj: chmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-chmod.obj `if test -f 'chmod.S'; then $(CYGPATH_W) 'chmod.S'; else $(CYGPATH_W) '$(srcdir)/chmod.S'; fi`

libdos_a-cinsns.o: cinsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-cinsns.o `test -f 'cinsns.S' || echo '$(srcdir)/'`cinsns.S

libdos_a-cinsns.obj: cinsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-cinsns.obj `if test -f 'cinsns.S'; then $(CYGPATH_W) 'cinsns.S'; else $(CYGPATH_W) '$(srcdir)/cinsns.S'; fi`

libdos_a-close.o: close.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-close.o `test -f 'close.S' || echo '$(srcdir)/'`close.S

libdos_a-close.obj: close.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-close.obj `if test -f 'close.S'; then $(CYGPATH_W) 'close.S'; else $(CYGPATH_W) '$(srcdir)/close.S'; fi`

libdos_a-cominp.o: cominp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-cominp.o `test -f 'cominp.S' || echo '$(srcdir)/'`cominp.S

libdos_a-cominp.obj: cominp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-cominp.obj `if test -f 'cominp.S'; then $(CYGPATH_W) 'cominp.S'; else $(CYGPATH_W) '$(srcdir)/cominp.S'; fi`

libdos_a-common_ck.o: common_ck.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_ck.o `test -f 'common_ck.S' || echo '$(srcdir)/'`common_ck.S

libdos_a-common_ck.obj: common_ck.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_ck.obj `if test -f 'common_ck.S'; then $(CYGPATH_W) 'common_ck.S'; else $(CYGPATH_W) '$(srcdir)/common_ck.S'; fi`

libdos_a-common_del.o: common_del.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_del.o `test -f 'common_del.S' || echo '$(srcdir)/'`common_del.S

libdos_a-common_del.obj: common_del.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_del.obj `if test -f 'common_del.S'; then $(CYGPATH_W) 'common_del.S'; else $(CYGPATH_W) '$(srcdir)/common_del.S'; fi`

libdos_a-common_fre.o: common_fre.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_fre.o `test -f 'common_fre.S' || echo '$(srcdir)/'`common_fre.S

libdos_a-common_fre.obj: common_fre.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_fre.obj `if test -f 'common_fre.S'; then $(CYGPATH_W) 'common_fre.S'; else $(CYGPATH_W) '$(srcdir)/common_fre.S'; fi`

libdos_a-common_lk.o: common_lk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_lk.o `test -f 'common_lk.S' || echo '$(srcdir)/'`common_lk.S

libdos_a-common_lk.obj: common_lk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_lk.obj `if test -f 'common_lk.S'; then $(CYGPATH_W) 'common_lk.S'; else $(CYGPATH_W) '$(srcdir)/common_lk.S'; fi`

libdos_a-common_rd.o: common_rd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_rd.o `test -f 'common_rd.S' || echo '$(srcdir)/'`common_rd.S

libdos_a-common_rd.obj: common_rd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_rd.obj `if test -f 'common_rd.S'; then $(CYGPATH_W) 'common_rd.S'; else $(CYGPATH_W) '$(srcdir)/common_rd.S'; fi`

libdos_a-common_wt.o: common_wt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_wt.o `test -f 'common_wt.S' || echo '$(srcdir)/'`common_wt.S

libdos_a-common_wt.obj: common_wt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-common_wt.obj `if test -f 'common_wt.S'; then $(CYGPATH_W) 'common_wt.S'; else $(CYGPATH_W) '$(srcdir)/common_wt.S'; fi`

libdos_a-comout.o: comout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-comout.o `test -f 'comout.S' || echo '$(srcdir)/'`comout.S

libdos_a-comout.obj: comout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-comout.obj `if test -f 'comout.S'; then $(CYGPATH_W) 'comout.S'; else $(CYGPATH_W) '$(srcdir)/comout.S'; fi`

libdos_a-consns.o: consns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-consns.o `test -f 'consns.S' || echo '$(srcdir)/'`consns.S

libdos_a-consns.obj: consns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-consns.obj `if test -f 'consns.S'; then $(CYGPATH_W) 'consns.S'; else $(CYGPATH_W) '$(srcdir)/consns.S'; fi`

libdos_a-coutsns.o: coutsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-coutsns.o `test -f 'coutsns.S' || echo '$(srcdir)/'`coutsns.S

libdos_a-coutsns.obj: coutsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-coutsns.obj `if test -f 'coutsns.S'; then $(CYGPATH_W) 'coutsns.S'; else $(CYGPATH_W) '$(srcdir)/coutsns.S'; fi`

libdos_a-create.o: create.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-create.o `test -f 'create.S' || echo '$(srcdir)/'`create.S

libdos_a-create.obj: create.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-create.obj `if test -f 'create.S'; then $(CYGPATH_W) 'create.S'; else $(CYGPATH_W) '$(srcdir)/create.S'; fi`

libdos_a-ctlabort.o: ctlabort.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ctlabort.o `test -f 'ctlabort.S' || echo '$(srcdir)/'`ctlabort.S

libdos_a-ctlabort.obj: ctlabort.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ctlabort.obj `if test -f 'ctlabort.S'; then $(CYGPATH_W) 'ctlabort.S'; else $(CYGPATH_W) '$(srcdir)/ctlabort.S'; fi`

libdos_a-curdir.o: curdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-curdir.o `test -f 'curdir.S' || echo '$(srcdir)/'`curdir.S

libdos_a-curdir.obj: curdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-curdir.obj `if test -f 'curdir.S'; then $(CYGPATH_W) 'curdir.S'; else $(CYGPATH_W) '$(srcdir)/curdir.S'; fi`

libdos_a-curdrv.o: curdrv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-curdrv.o `test -f 'curdrv.S' || echo '$(srcdir)/'`curdrv.S

libdos_a-curdrv.obj: curdrv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-curdrv.obj `if test -f 'curdrv.S'; then $(CYGPATH_W) 'curdrv.S'; else $(CYGPATH_W) '$(srcdir)/curdrv.S'; fi`

libdos_a-delete.o: delete.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-delete.o `test -f 'delete.S' || echo '$(srcdir)/'`delete.S

libdos_a-delete.obj: delete.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-delete.obj `if test -f 'delete.S'; then $(CYGPATH_W) 'delete.S'; else $(CYGPATH_W) '$(srcdir)/delete.S'; fi`

libdos_a-diskred.o: diskred.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskred.o `test -f 'diskred.S' || echo '$(srcdir)/'`diskred.S

libdos_a-diskred.obj: diskred.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskred.obj `if test -f 'diskred.S'; then $(CYGPATH_W) 'diskred.S'; else $(CYGPATH_W) '$(srcdir)/diskred.S'; fi`

libdos_a-diskred2.o: diskred2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskred2.o `test -f 'diskred2.S' || echo '$(srcdir)/'`diskred2.S

libdos_a-diskred2.obj: diskred2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskred2.obj `if test -f 'diskred2.S'; then $(CYGPATH_W) 'diskred2.S'; else $(CYGPATH_W) '$(srcdir)/diskred2.S'; fi`

libdos_a-diskwrt.o: diskwrt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskwrt.o `test -f 'diskwrt.S' || echo '$(srcdir)/'`diskwrt.S

libdos_a-diskwrt.obj: diskwrt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskwrt.obj `if test -f 'diskwrt.S'; then $(CYGPATH_W) 'diskwrt.S'; else $(CYGPATH_W) '$(srcdir)/diskwrt.S'; fi`

libdos_a-diskwrt2.o: diskwrt2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskwrt2.o `test -f 'diskwrt2.S' || echo '$(srcdir)/'`diskwrt2.S

libdos_a-diskwrt2.obj: diskwrt2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-diskwrt2.obj `if test -f 'diskwrt2.S'; then $(CYGPATH_W) 'diskwrt2.S'; else $(CYGPATH_W) '$(srcdir)/diskwrt2.S'; fi`

libdos_a-drvctrl.o: drvctrl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-drvctrl.o `test -f 'drvctrl.S' || echo '$(srcdir)/'`drvctrl.S

libdos_a-drvctrl.obj: drvctrl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-drvctrl.obj `if test -f 'drvctrl.S'; then $(CYGPATH_W) 'drvctrl.S'; else $(CYGPATH_W) '$(srcdir)/drvctrl.S'; fi`

libdos_a-drvxchg.o: drvxchg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-drvxchg.o `test -f 'drvxchg.S' || echo '$(srcdir)/'`drvxchg.S

libdos_a-drvxchg.obj: drvxchg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-drvxchg.obj `if test -f 'drvxchg.S'; then $(CYGPATH_W) 'drvxchg.S'; else $(CYGPATH_W) '$(srcdir)/drvxchg.S'; fi`

libdos_a-dskfre.o: dskfre.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dskfre.o `test -f 'dskfre.S' || echo '$(srcdir)/'`dskfre.S

libdos_a-dskfre.obj: dskfre.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dskfre.obj `if test -f 'dskfre.S'; then $(CYGPATH_W) 'dskfre.S'; else $(CYGPATH_W) '$(srcdir)/dskfre.S'; fi`

libdos_a-dup.o: dup.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dup.o `test -f 'dup.S' || echo '$(srcdir)/'`dup.S

libdos_a-dup.obj: dup.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dup.obj `if test -f 'dup.S'; then $(CYGPATH_W) 'dup.S'; else $(CYGPATH_W) '$(srcdir)/dup.S'; fi`

libdos_a-dup0.o: dup0.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dup0.o `test -f 'dup0.S' || echo '$(srcdir)/'`dup0.S

libdos_a-dup0.obj: dup0.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dup0.obj `if test -f 'dup0.S'; then $(CYGPATH_W) 'dup0.S'; else $(CYGPATH_W) '$(srcdir)/dup0.S'; fi`

libdos_a-dup2.o: dup2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dup2.o `test -f 'dup2.S' || echo '$(srcdir)/'`dup2.S

libdos_a-dup2.obj: dup2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-dup2.obj `if test -f 'dup2.S'; then $(CYGPATH_W) 'dup2.S'; else $(CYGPATH_W) '$(srcdir)/dup2.S'; fi`

libdos_a-errabort.o: errabort.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-errabort.o `test -f 'errabort.S' || echo '$(srcdir)/'`errabort.S

libdos_a-errabort.obj: errabort.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-errabort.obj `if test -f 'errabort.S'; then $(CYGPATH_W) 'errabort.S'; else $(CYGPATH_W) '$(srcdir)/errabort.S'; fi`

libdos_a-exec2.o: exec2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exec2.o `test -f 'exec2.S' || echo '$(srcdir)/'`exec2.S

libdos_a-exec2.obj: exec2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exec2.obj `if test -f 'exec2.S'; then $(CYGPATH_W) 'exec2.S'; else $(CYGPATH_W) '$(srcdir)/exec2.S'; fi`

libdos_a-execonly.o: execonly.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-execonly.o `test -f 'execonly.S' || echo '$(srcdir)/'`execonly.S

libdos_a-execonly.obj: execonly.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-execonly.obj `if test -f 'execonly.S'; then $(CYGPATH_W) 'execonly.S'; else $(CYGPATH_W) '$(srcdir)/execonly.S'; fi`

libdos_a-exfiles.o: exfiles.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exfiles.o `test -f 'exfiles.S' || echo '$(srcdir)/'`exfiles.S

libdos_a-exfiles.obj: exfiles.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exfiles.obj `if test -f 'exfiles.S'; then $(CYGPATH_W) 'exfiles.S'; else $(CYGPATH_W) '$(srcdir)/exfiles.S'; fi`

libdos_a-exit.o: exit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exit.o `test -f 'exit.S' || echo '$(srcdir)/'`exit.S

libdos_a-exit.obj: exit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exit.obj `if test -f 'exit.S'; then $(CYGPATH_W) 'exit.S'; else $(CYGPATH_W) '$(srcdir)/exit.S'; fi`

libdos_a-exit2.o: exit2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exit2.o `test -f 'exit2.S' || echo '$(srcdir)/'`exit2.S

libdos_a-exit2.obj: exit2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exit2.obj `if test -f 'exit2.S'; then $(CYGPATH_W) 'exit2.S'; else $(CYGPATH_W) '$(srcdir)/exit2.S'; fi`

libdos_a-exnfiles.o: exnfiles.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exnfiles.o `test -f 'exnfiles.S' || echo '$(srcdir)/'`exnfiles.S

libdos_a-exnfiles.obj: exnfiles.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-exnfiles.obj `if test -f 'exnfiles.S'; then $(CYGPATH_W) 'exnfiles.S'; else $(CYGPATH_W) '$(srcdir)/exnfiles.S'; fi`

libdos_a-fatchk.o: fatchk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fatchk.o `test -f 'fatchk.S' || echo '$(srcdir)/'`fatchk.S

libdos_a-fatchk.obj: fatchk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fatchk.obj `if test -f 'fatchk.S'; then $(CYGPATH_W) 'fatchk.S'; else $(CYGPATH_W) '$(srcdir)/fatchk.S'; fi`

libdos_a-fatchk2.o: fatchk2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fatchk2.o `test -f 'fatchk2.S' || echo '$(srcdir)/'`fatchk2.S

libdos_a-fatchk2.obj: fatchk2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fatchk2.obj `if test -f 'fatchk2.S'; then $(CYGPATH_W) 'fatchk2.S'; else $(CYGPATH_W) '$(srcdir)/fatchk2.S'; fi`

libdos_a-fflush.o: fflush.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fflush.o `test -f 'fflush.S' || echo '$(srcdir)/'`fflush.S

libdos_a-fflush.obj: fflush.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fflush.obj `if test -f 'fflush.S'; then $(CYGPATH_W) 'fflush.S'; else $(CYGPATH_W) '$(srcdir)/fflush.S'; fi`

libdos_a-fflush_set.o: fflush_set.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fflush_set.o `test -f 'fflush_set.S' || echo '$(srcdir)/'`fflush_set.S

libdos_a-fflush_set.obj: fflush_set.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fflush_set.obj `if test -f 'fflush_set.S'; then $(CYGPATH_W) 'fflush_set.S'; else $(CYGPATH_W) '$(srcdir)/fflush_set.S'; fi`

libdos_a-fgetc.o: fgetc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fgetc.o `test -f 'fgetc.S' || echo '$(srcdir)/'`fgetc.S

libdos_a-fgetc.obj: fgetc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fgetc.obj `if test -f 'fgetc.S'; then $(CYGPATH_W) 'fgetc.S'; else $(CYGPATH_W) '$(srcdir)/fgetc.S'; fi`

libdos_a-fgets.o: fgets.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fgets.o `test -f 'fgets.S' || echo '$(srcdir)/'`fgets.S

libdos_a-fgets.obj: fgets.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fgets.obj `if test -f 'fgets.S'; then $(CYGPATH_W) 'fgets.S'; else $(CYGPATH_W) '$(srcdir)/fgets.S'; fi`

libdos_a-filedate.o: filedate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-filedate.o `test -f 'filedate.S' || echo '$(srcdir)/'`filedate.S

libdos_a-filedate.obj: filedate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-filedate.obj `if test -f 'filedate.S'; then $(CYGPATH_W) 'filedate.S'; else $(CYGPATH_W) '$(srcdir)/filedate.S'; fi`

libdos_a-files.o: files.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-files.o `test -f 'files.S' || echo '$(srcdir)/'`files.S

libdos_a-files.obj: files.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-files.obj `if test -f 'files.S'; then $(CYGPATH_W) 'files.S'; else $(CYGPATH_W) '$(srcdir)/files.S'; fi`

libdos_a-fnckeygt.o: fnckeygt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fnckeygt.o `test -f 'fnckeygt.S' || echo '$(srcdir)/'`fnckeygt.S

libdos_a-fnckeygt.obj: fnckeygt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fnckeygt.obj `if test -f 'fnckeygt.S'; then $(CYGPATH_W) 'fnckeygt.S'; else $(CYGPATH_W) '$(srcdir)/fnckeygt.S'; fi`

libdos_a-fnckeyst.o: fnckeyst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fnckeyst.o `test -f 'fnckeyst.S' || echo '$(srcdir)/'`fnckeyst.S

libdos_a-fnckeyst.obj: fnckeyst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fnckeyst.obj `if test -f 'fnckeyst.S'; then $(CYGPATH_W) 'fnckeyst.S'; else $(CYGPATH_W) '$(srcdir)/fnckeyst.S'; fi`

libdos_a-fputc.o: fputc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fputc.o `test -f 'fputc.S' || echo '$(srcdir)/'`fputc.S

libdos_a-fputc.obj: fputc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fputc.obj `if test -f 'fputc.S'; then $(CYGPATH_W) 'fputc.S'; else $(CYGPATH_W) '$(srcdir)/fputc.S'; fi`

libdos_a-fputs.o: fputs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fputs.o `test -f 'fputs.S' || echo '$(srcdir)/'`fputs.S

libdos_a-fputs.obj: fputs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-fputs.obj `if test -f 'fputs.S'; then $(CYGPATH_W) 'fputs.S'; else $(CYGPATH_W) '$(srcdir)/fputs.S'; fi`

libdos_a-get_fcb_adr.o: get_fcb_adr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-get_fcb_adr.o `test -f 'get_fcb_adr.S' || echo '$(srcdir)/'`get_fcb_adr.S

libdos_a-get_fcb_adr.obj: get_fcb_adr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-get_fcb_adr.obj `if test -f 'get_fcb_adr.S'; then $(CYGPATH_W) 'get_fcb_adr.S'; else $(CYGPATH_W) '$(srcdir)/get_fcb_adr.S'; fi`

libdos_a-get_pr.o: get_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-get_pr.o `test -f 'get_pr.S' || echo '$(srcdir)/'`get_pr.S

libdos_a-get_pr.obj: get_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-get_pr.obj `if test -f 'get_pr.S'; then $(CYGPATH_W) 'get_pr.S'; else $(CYGPATH_W) '$(srcdir)/get_pr.S'; fi`

libdos_a-getassign.o: getassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getassign.o `test -f 'getassign.S' || echo '$(srcdir)/'`getassign.S

libdos_a-getassign.obj: getassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getassign.obj `if test -f 'getassign.S'; then $(CYGPATH_W) 'getassign.S'; else $(CYGPATH_W) '$(srcdir)/getassign.S'; fi`

libdos_a-getc.o: getc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getc.o `test -f 'getc.S' || echo '$(srcdir)/'`getc.S

libdos_a-getc.obj: getc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getc.obj `if test -f 'getc.S'; then $(CYGPATH_W) 'getc.S'; else $(CYGPATH_W) '$(srcdir)/getc.S'; fi`

libdos_a-getchar.o: getchar.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getchar.o `test -f 'getchar.S' || echo '$(srcdir)/'`getchar.S

libdos_a-getchar.obj: getchar.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getchar.obj `if test -f 'getchar.S'; then $(CYGPATH_W) 'getchar.S'; else $(CYGPATH_W) '$(srcdir)/getchar.S'; fi`

libdos_a-getdate.o: getdate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getdate.o `test -f 'getdate.S' || echo '$(srcdir)/'`getdate.S

libdos_a-getdate.obj: getdate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getdate.obj `if test -f 'getdate.S'; then $(CYGPATH_W) 'getdate.S'; else $(CYGPATH_W) '$(srcdir)/getdate.S'; fi`

libdos_a-getdpb.o: getdpb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getdpb.o `test -f 'getdpb.S' || echo '$(srcdir)/'`getdpb.S

libdos_a-getdpb.obj: getdpb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getdpb.obj `if test -f 'getdpb.S'; then $(CYGPATH_W) 'getdpb.S'; else $(CYGPATH_W) '$(srcdir)/getdpb.S'; fi`

libdos_a-getenv.o: getenv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getenv.o `test -f 'getenv.S' || echo '$(srcdir)/'`getenv.S

libdos_a-getenv.obj: getenv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getenv.obj `if test -f 'getenv.S'; then $(CYGPATH_W) 'getenv.S'; else $(CYGPATH_W) '$(srcdir)/getenv.S'; fi`

libdos_a-getpdb.o: getpdb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getpdb.o `test -f 'getpdb.S' || echo '$(srcdir)/'`getpdb.S

libdos_a-getpdb.obj: getpdb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getpdb.obj `if test -f 'getpdb.S'; then $(CYGPATH_W) 'getpdb.S'; else $(CYGPATH_W) '$(srcdir)/getpdb.S'; fi`

libdos_a-gets.o: gets.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-gets.o `test -f 'gets.S' || echo '$(srcdir)/'`gets.S

libdos_a-gets.obj: gets.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-gets.obj `if test -f 'gets.S'; then $(CYGPATH_W) 'gets.S'; else $(CYGPATH_W) '$(srcdir)/gets.S'; fi`

libdos_a-getss.o: getss.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getss.o `test -f 'getss.S' || echo '$(srcdir)/'`getss.S

libdos_a-getss.obj: getss.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-getss.obj `if test -f 'getss.S'; then $(CYGPATH_W) 'getss.S'; else $(CYGPATH_W) '$(srcdir)/getss.S'; fi`

libdos_a-gettim2.o: gettim2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-gettim2.o `test -f 'gettim2.S' || echo '$(srcdir)/'`gettim2.S

libdos_a-gettim2.obj: gettim2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-gettim2.obj `if test -f 'gettim2.S'; then $(CYGPATH_W) 'gettim2.S'; else $(CYGPATH_W) '$(srcdir)/gettim2.S'; fi`

libdos_a-gettime.o: gettime.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-gettime.o `test -f 'gettime.S' || echo '$(srcdir)/'`gettime.S

libdos_a-gettime.obj: gettime.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-gettime.obj `if test -f 'gettime.S'; then $(CYGPATH_W) 'gettime.S'; else $(CYGPATH_W) '$(srcdir)/gettime.S'; fi`

libdos_a-hendspic.o: hendspic.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspic.o `test -f 'hendspic.S' || echo '$(srcdir)/'`hendspic.S

libdos_a-hendspic.obj: hendspic.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspic.obj `if test -f 'hendspic.S'; then $(CYGPATH_W) 'hendspic.S'; else $(CYGPATH_W) '$(srcdir)/hendspic.S'; fi`

libdos_a-hendspio.o: hendspio.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspio.o `test -f 'hendspio.S' || echo '$(srcdir)/'`hendspio.S

libdos_a-hendspio.obj: hendspio.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspio.obj `if test -f 'hendspio.S'; then $(CYGPATH_W) 'hendspio.S'; else $(CYGPATH_W) '$(srcdir)/hendspio.S'; fi`

libdos_a-hendspip.o: hendspip.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspip.o `test -f 'hendspip.S' || echo '$(srcdir)/'`hendspip.S

libdos_a-hendspip.obj: hendspip.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspip.obj `if test -f 'hendspip.S'; then $(CYGPATH_W) 'hendspip.S'; else $(CYGPATH_W) '$(srcdir)/hendspip.S'; fi`

libdos_a-hendspir.o: hendspir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspir.o `test -f 'hendspir.S' || echo '$(srcdir)/'`hendspir.S

libdos_a-hendspir.obj: hendspir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspir.obj `if test -f 'hendspir.S'; then $(CYGPATH_W) 'hendspir.S'; else $(CYGPATH_W) '$(srcdir)/hendspir.S'; fi`

libdos_a-hendspmc.o: hendspmc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmc.o `test -f 'hendspmc.S' || echo '$(srcdir)/'`hendspmc.S

libdos_a-hendspmc.obj: hendspmc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmc.obj `if test -f 'hendspmc.S'; then $(CYGPATH_W) 'hendspmc.S'; else $(CYGPATH_W) '$(srcdir)/hendspmc.S'; fi`

libdos_a-hendspmo.o: hendspmo.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmo.o `test -f 'hendspmo.S' || echo '$(srcdir)/'`hendspmo.S

libdos_a-hendspmo.obj: hendspmo.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmo.obj `if test -f 'hendspmo.S'; then $(CYGPATH_W) 'hendspmo.S'; else $(CYGPATH_W) '$(srcdir)/hendspmo.S'; fi`

libdos_a-hendspmp.o: hendspmp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmp.o `test -f 'hendspmp.S' || echo '$(srcdir)/'`hendspmp.S

libdos_a-hendspmp.obj: hendspmp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmp.obj `if test -f 'hendspmp.S'; then $(CYGPATH_W) 'hendspmp.S'; else $(CYGPATH_W) '$(srcdir)/hendspmp.S'; fi`

libdos_a-hendspmr.o: hendspmr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmr.o `test -f 'hendspmr.S' || echo '$(srcdir)/'`hendspmr.S

libdos_a-hendspmr.obj: hendspmr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspmr.obj `if test -f 'hendspmr.S'; then $(CYGPATH_W) 'hendspmr.S'; else $(CYGPATH_W) '$(srcdir)/hendspmr.S'; fi`

libdos_a-hendspsc.o: hendspsc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspsc.o `test -f 'hendspsc.S' || echo '$(srcdir)/'`hendspsc.S

libdos_a-hendspsc.obj: hendspsc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspsc.obj `if test -f 'hendspsc.S'; then $(CYGPATH_W) 'hendspsc.S'; else $(CYGPATH_W) '$(srcdir)/hendspsc.S'; fi`

libdos_a-hendspso.o: hendspso.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspso.o `test -f 'hendspso.S' || echo '$(srcdir)/'`hendspso.S

libdos_a-hendspso.obj: hendspso.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspso.obj `if test -f 'hendspso.S'; then $(CYGPATH_W) 'hendspso.S'; else $(CYGPATH_W) '$(srcdir)/hendspso.S'; fi`

libdos_a-hendspsp.o: hendspsp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspsp.o `test -f 'hendspsp.S' || echo '$(srcdir)/'`hendspsp.S

libdos_a-hendspsp.obj: hendspsp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspsp.obj `if test -f 'hendspsp.S'; then $(CYGPATH_W) 'hendspsp.S'; else $(CYGPATH_W) '$(srcdir)/hendspsp.S'; fi`

libdos_a-hendspsr.o: hendspsr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspsr.o `test -f 'hendspsr.S' || echo '$(srcdir)/'`hendspsr.S

libdos_a-hendspsr.obj: hendspsr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-hendspsr.obj `if test -f 'hendspsr.S'; then $(CYGPATH_W) 'hendspsr.S'; else $(CYGPATH_W) '$(srcdir)/hendspsr.S'; fi`

libdos_a-indosflg.o: indosflg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-indosflg.o `test -f 'indosflg.S' || echo '$(srcdir)/'`indosflg.S

libdos_a-indosflg.obj: indosflg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-indosflg.obj `if test -f 'indosflg.S'; then $(CYGPATH_W) 'indosflg.S'; else $(CYGPATH_W) '$(srcdir)/indosflg.S'; fi`

libdos_a-inkey.o: inkey.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-inkey.o `test -f 'inkey.S' || echo '$(srcdir)/'`inkey.S

libdos_a-inkey.obj: inkey.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-inkey.obj `if test -f 'inkey.S'; then $(CYGPATH_W) 'inkey.S'; else $(CYGPATH_W) '$(srcdir)/inkey.S'; fi`

libdos_a-inpout.o: inpout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-inpout.o `test -f 'inpout.S' || echo '$(srcdir)/'`inpout.S

libdos_a-inpout.obj: inpout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-inpout.obj `if test -f 'inpout.S'; then $(CYGPATH_W) 'inpout.S'; else $(CYGPATH_W) '$(srcdir)/inpout.S'; fi`

libdos_a-intvcg.o: intvcg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-intvcg.o `test -f 'intvcg.S' || echo '$(srcdir)/'`intvcg.S

libdos_a-intvcg.obj: intvcg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-intvcg.obj `if test -f 'intvcg.S'; then $(CYGPATH_W) 'intvcg.S'; else $(CYGPATH_W) '$(srcdir)/intvcg.S'; fi`

libdos_a-intvcs.o: intvcs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-intvcs.o `test -f 'intvcs.S' || echo '$(srcdir)/'`intvcs.S

libdos_a-intvcs.obj: intvcs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-intvcs.obj `if test -f 'intvcs.S'; then $(CYGPATH_W) 'intvcs.S'; else $(CYGPATH_W) '$(srcdir)/intvcs.S'; fi`

libdos_a-ioctrldvctl.o: ioctrldvctl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrldvctl.o `test -f 'ioctrldvctl.S' || echo '$(srcdir)/'`ioctrldvctl.S

libdos_a-ioctrldvctl.obj: ioctrldvctl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrldvctl.obj `if test -f 'ioctrldvctl.S'; then $(CYGPATH_W) 'ioctrldvctl.S'; else $(CYGPATH_W) '$(srcdir)/ioctrldvctl.S'; fi`

libdos_a-ioctrldvgt.o: ioctrldvgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrldvgt.o `test -f 'ioctrldvgt.S' || echo '$(srcdir)/'`ioctrldvgt.S

libdos_a-ioctrldvgt.obj: ioctrldvgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrldvgt.obj `if test -f 'ioctrldvgt.S'; then $(CYGPATH_W) 'ioctrldvgt.S'; else $(CYGPATH_W) '$(srcdir)/ioctrldvgt.S'; fi`

libdos_a-ioctrlfdctl.o: ioctrlfdctl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlfdctl.o `test -f 'ioctrlfdctl.S' || echo '$(srcdir)/'`ioctrlfdctl.S

libdos_a-ioctrlfdctl.obj: ioctrlfdctl.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlfdctl.obj `if test -f 'ioctrlfdctl.S'; then $(CYGPATH_W) 'ioctrlfdctl.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlfdctl.S'; fi`

libdos_a-ioctrlfdgt.o: ioctrlfdgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlfdgt.o `test -f 'ioctrlfdgt.S' || echo '$(srcdir)/'`ioctrlfdgt.S

libdos_a-ioctrlfdgt.obj: ioctrlfdgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlfdgt.obj `if test -f 'ioctrlfdgt.S'; then $(CYGPATH_W) 'ioctrlfdgt.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlfdgt.S'; fi`

libdos_a-ioctrlgt.o: ioctrlgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlgt.o `test -f 'ioctrlgt.S' || echo '$(srcdir)/'`ioctrlgt.S

libdos_a-ioctrlgt.obj: ioctrlgt.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlgt.obj `if test -f 'ioctrlgt.S'; then $(CYGPATH_W) 'ioctrlgt.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlgt.S'; fi`

libdos_a-ioctrlis.o: ioctrlis.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlis.o `test -f 'ioctrlis.S' || echo '$(srcdir)/'`ioctrlis.S

libdos_a-ioctrlis.obj: ioctrlis.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlis.obj `if test -f 'ioctrlis.S'; then $(CYGPATH_W) 'ioctrlis.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlis.S'; fi`

libdos_a-ioctrlos.o: ioctrlos.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlos.o `test -f 'ioctrlos.S' || echo '$(srcdir)/'`ioctrlos.S

libdos_a-ioctrlos.obj: ioctrlos.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlos.obj `if test -f 'ioctrlos.S'; then $(CYGPATH_W) 'ioctrlos.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlos.S'; fi`

libdos_a-ioctrlrd.o: ioctrlrd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlrd.o `test -f 'ioctrlrd.S' || echo '$(srcdir)/'`ioctrlrd.S

libdos_a-ioctrlrd.obj: ioctrlrd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlrd.obj `if test -f 'ioctrlrd.S'; then $(CYGPATH_W) 'ioctrlrd.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlrd.S'; fi`

libdos_a-ioctrlrh.o: ioctrlrh.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlrh.o `test -f 'ioctrlrh.S' || echo '$(srcdir)/'`ioctrlrh.S

libdos_a-ioctrlrh.obj: ioctrlrh.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlrh.obj `if test -f 'ioctrlrh.S'; then $(CYGPATH_W) 'ioctrlrh.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlrh.S'; fi`

libdos_a-ioctrlrtset.o: ioctrlrtset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlrtset.o `test -f 'ioctrlrtset.S' || echo '$(srcdir)/'`ioctrlrtset.S

libdos_a-ioctrlrtset.obj: ioctrlrtset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlrtset.obj `if test -f 'ioctrlrtset.S'; then $(CYGPATH_W) 'ioctrlrtset.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlrtset.S'; fi`

libdos_a-ioctrlst.o: ioctrlst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlst.o `test -f 'ioctrlst.S' || echo '$(srcdir)/'`ioctrlst.S

libdos_a-ioctrlst.obj: ioctrlst.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlst.obj `if test -f 'ioctrlst.S'; then $(CYGPATH_W) 'ioctrlst.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlst.S'; fi`

libdos_a-ioctrlwd.o: ioctrlwd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlwd.o `test -f 'ioctrlwd.S' || echo '$(srcdir)/'`ioctrlwd.S

libdos_a-ioctrlwd.obj: ioctrlwd.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlwd.obj `if test -f 'ioctrlwd.S'; then $(CYGPATH_W) 'ioctrlwd.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlwd.S'; fi`

libdos_a-ioctrlwh.o: ioctrlwh.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlwh.o `test -f 'ioctrlwh.S' || echo '$(srcdir)/'`ioctrlwh.S

libdos_a-ioctrlwh.obj: ioctrlwh.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-ioctrlwh.obj `if test -f 'ioctrlwh.S'; then $(CYGPATH_W) 'ioctrlwh.S'; else $(CYGPATH_W) '$(srcdir)/ioctrlwh.S'; fi`

libdos_a-k_insmod.o: k_insmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_insmod.o `test -f 'k_insmod.S' || echo '$(srcdir)/'`k_insmod.S

libdos_a-k_insmod.obj: k_insmod.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_insmod.obj `if test -f 'k_insmod.S'; then $(CYGPATH_W) 'k_insmod.S'; else $(CYGPATH_W) '$(srcdir)/k_insmod.S'; fi`

libdos_a-k_keybit.o: k_keybit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_keybit.o `test -f 'k_keybit.S' || echo '$(srcdir)/'`k_keybit.S

libdos_a-k_keybit.obj: k_keybit.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_keybit.obj `if test -f 'k_keybit.S'; then $(CYGPATH_W) 'k_keybit.S'; else $(CYGPATH_W) '$(srcdir)/k_keybit.S'; fi`

libdos_a-k_keyinp.o: k_keyinp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_keyinp.o `test -f 'k_keyinp.S' || echo '$(srcdir)/'`k_keyinp.S

libdos_a-k_keyinp.obj: k_keyinp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_keyinp.obj `if test -f 'k_keyinp.S'; then $(CYGPATH_W) 'k_keyinp.S'; else $(CYGPATH_W) '$(srcdir)/k_keyinp.S'; fi`

libdos_a-k_keysns.o: k_keysns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_keysns.o `test -f 'k_keysns.S' || echo '$(srcdir)/'`k_keysns.S

libdos_a-k_keysns.obj: k_keysns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_keysns.obj `if test -f 'k_keysns.S'; then $(CYGPATH_W) 'k_keysns.S'; else $(CYGPATH_W) '$(srcdir)/k_keysns.S'; fi`

libdos_a-k_sftsns.o: k_sftsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_sftsns.o `test -f 'k_sftsns.S' || echo '$(srcdir)/'`k_sftsns.S

libdos_a-k_sftsns.obj: k_sftsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-k_sftsns.obj `if test -f 'k_sftsns.S'; then $(CYGPATH_W) 'k_sftsns.S'; else $(CYGPATH_W) '$(srcdir)/k_sftsns.S'; fi`

libdos_a-keeppr.o: keeppr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-keeppr.o `test -f 'keeppr.S' || echo '$(srcdir)/'`keeppr.S

libdos_a-keeppr.obj: keeppr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-keeppr.obj `if test -f 'keeppr.S'; then $(CYGPATH_W) 'keeppr.S'; else $(CYGPATH_W) '$(srcdir)/keeppr.S'; fi`

libdos_a-keysns.o: keysns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-keysns.o `test -f 'keysns.S' || echo '$(srcdir)/'`keysns.S

libdos_a-keysns.obj: keysns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-keysns.obj `if test -f 'keysns.S'; then $(CYGPATH_W) 'keysns.S'; else $(CYGPATH_W) '$(srcdir)/keysns.S'; fi`

libdos_a-kflushgc.o: kflushgc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushgc.o `test -f 'kflushgc.S' || echo '$(srcdir)/'`kflushgc.S

libdos_a-kflushgc.obj: kflushgc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushgc.obj `if test -f 'kflushgc.S'; then $(CYGPATH_W) 'kflushgc.S'; else $(CYGPATH_W) '$(srcdir)/kflushgc.S'; fi`

libdos_a-kflushgp.o: kflushgp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushgp.o `test -f 'kflushgp.S' || echo '$(srcdir)/'`kflushgp.S

libdos_a-kflushgp.obj: kflushgp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushgp.obj `if test -f 'kflushgp.S'; then $(CYGPATH_W) 'kflushgp.S'; else $(CYGPATH_W) '$(srcdir)/kflushgp.S'; fi`

libdos_a-kflushgs.o: kflushgs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushgs.o `test -f 'kflushgs.S' || echo '$(srcdir)/'`kflushgs.S

libdos_a-kflushgs.obj: kflushgs.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushgs.obj `if test -f 'kflushgs.S'; then $(CYGPATH_W) 'kflushgs.S'; else $(CYGPATH_W) '$(srcdir)/kflushgs.S'; fi`

libdos_a-kflushin.o: kflushin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushin.o `test -f 'kflushin.S' || echo '$(srcdir)/'`kflushin.S

libdos_a-kflushin.obj: kflushin.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushin.obj `if test -f 'kflushin.S'; then $(CYGPATH_W) 'kflushin.S'; else $(CYGPATH_W) '$(srcdir)/kflushin.S'; fi`

libdos_a-kflushio.o: kflushio.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushio.o `test -f 'kflushio.S' || echo '$(srcdir)/'`kflushio.S

libdos_a-kflushio.obj: kflushio.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kflushio.obj `if test -f 'kflushio.S'; then $(CYGPATH_W) 'kflushio.S'; else $(CYGPATH_W) '$(srcdir)/kflushio.S'; fi`

libdos_a-kill_pr.o: kill_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kill_pr.o `test -f 'kill_pr.S' || echo '$(srcdir)/'`kill_pr.S

libdos_a-kill_pr.obj: kill_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-kill_pr.obj `if test -f 'kill_pr.S'; then $(CYGPATH_W) 'kill_pr.S'; else $(CYGPATH_W) '$(srcdir)/kill_pr.S'; fi`

libdos_a-load.o: load.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-load.o `test -f 'load.S' || echo '$(srcdir)/'`load.S

libdos_a-load.obj: load.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-load.obj `if test -f 'load.S'; then $(CYGPATH_W) 'load.S'; else $(CYGPATH_W) '$(srcdir)/load.S'; fi`

libdos_a-loadexec.o: loadexec.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-loadexec.o `test -f 'loadexec.S' || echo '$(srcdir)/'`loadexec.S

libdos_a-loadexec.obj: loadexec.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-loadexec.obj `if test -f 'loadexec.S'; then $(CYGPATH_W) 'loadexec.S'; else $(CYGPATH_W) '$(srcdir)/loadexec.S'; fi`

libdos_a-loadonly.o: loadonly.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-loadonly.o `test -f 'loadonly.S' || echo '$(srcdir)/'`loadonly.S

libdos_a-loadonly.obj: loadonly.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-loadonly.obj `if test -f 'loadonly.S'; then $(CYGPATH_W) 'loadonly.S'; else $(CYGPATH_W) '$(srcdir)/loadonly.S'; fi`

libdos_a-lock.o: lock.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-lock.o `test -f 'lock.S' || echo '$(srcdir)/'`lock.S

libdos_a-lock.obj: lock.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-lock.obj `if test -f 'lock.S'; then $(CYGPATH_W) 'lock.S'; else $(CYGPATH_W) '$(srcdir)/lock.S'; fi`

libdos_a-makeassign.o: makeassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-makeassign.o `test -f 'makeassign.S' || echo '$(srcdir)/'`makeassign.S

libdos_a-makeassign.obj: makeassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-makeassign.obj `if test -f 'makeassign.S'; then $(CYGPATH_W) 'makeassign.S'; else $(CYGPATH_W) '$(srcdir)/makeassign.S'; fi`

libdos_a-maketmp.o: maketmp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-maketmp.o `test -f 'maketmp.S' || echo '$(srcdir)/'`maketmp.S

libdos_a-maketmp.obj: maketmp.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-maketmp.obj `if test -f 'maketmp.S'; then $(CYGPATH_W) 'maketmp.S'; else $(CYGPATH_W) '$(srcdir)/maketmp.S'; fi`

libdos_a-malloc.o: malloc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-malloc.o `test -f 'malloc.S' || echo '$(srcdir)/'`malloc.S

libdos_a-malloc.obj: malloc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-malloc.obj `if test -f 'malloc.S'; then $(CYGPATH_W) 'malloc.S'; else $(CYGPATH_W) '$(srcdir)/malloc.S'; fi`

libdos_a-malloc0.o: malloc0.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-malloc0.o `test -f 'malloc0.S' || echo '$(srcdir)/'`malloc0.S

libdos_a-malloc0.obj: malloc0.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-malloc0.obj `if test -f 'malloc0.S'; then $(CYGPATH_W) 'malloc0.S'; else $(CYGPATH_W) '$(srcdir)/malloc0.S'; fi`

libdos_a-malloc2.o: malloc2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-malloc2.o `test -f 'malloc2.S' || echo '$(srcdir)/'`malloc2.S

libdos_a-malloc2.obj: malloc2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-malloc2.obj `if test -f 'malloc2.S'; then $(CYGPATH_W) 'malloc2.S'; else $(CYGPATH_W) '$(srcdir)/malloc2.S'; fi`

libdos_a-memcpy.o: memcpy.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-memcpy.o `test -f 'memcpy.S' || echo '$(srcdir)/'`memcpy.S

libdos_a-memcpy.obj: memcpy.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-memcpy.obj `if test -f 'memcpy.S'; then $(CYGPATH_W) 'memcpy.S'; else $(CYGPATH_W) '$(srcdir)/memcpy.S'; fi`

libdos_a-mfree.o: mfree.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-mfree.o `test -f 'mfree.S' || echo '$(srcdir)/'`mfree.S

libdos_a-mfree.obj: mfree.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-mfree.obj `if test -f 'mfree.S'; then $(CYGPATH_W) 'mfree.S'; else $(CYGPATH_W) '$(srcdir)/mfree.S'; fi`

libdos_a-mkdir.o: mkdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-mkdir.o `test -f 'mkdir.S' || echo '$(srcdir)/'`mkdir.S

libdos_a-mkdir.obj: mkdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-mkdir.obj `if test -f 'mkdir.S'; then $(CYGPATH_W) 'mkdir.S'; else $(CYGPATH_W) '$(srcdir)/mkdir.S'; fi`

libdos_a-move.o: move.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-move.o `test -f 'move.S' || echo '$(srcdir)/'`move.S

libdos_a-move.obj: move.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-move.obj `if test -f 'move.S'; then $(CYGPATH_W) 'move.S'; else $(CYGPATH_W) '$(srcdir)/move.S'; fi`

libdos_a-nameck.o: nameck.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-nameck.o `test -f 'nameck.S' || echo '$(srcdir)/'`nameck.S

libdos_a-nameck.obj: nameck.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-nameck.obj `if test -f 'nameck.S'; then $(CYGPATH_W) 'nameck.S'; else $(CYGPATH_W) '$(srcdir)/nameck.S'; fi`

libdos_a-namests.o: namests.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-namests.o `test -f 'namests.S' || echo '$(srcdir)/'`namests.S

libdos_a-namests.obj: namests.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-namests.obj `if test -f 'namests.S'; then $(CYGPATH_W) 'namests.S'; else $(CYGPATH_W) '$(srcdir)/namests.S'; fi`

libdos_a-newfile.o: newfile.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-newfile.o `test -f 'newfile.S' || echo '$(srcdir)/'`newfile.S

libdos_a-newfile.obj: newfile.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-newfile.obj `if test -f 'newfile.S'; then $(CYGPATH_W) 'newfile.S'; else $(CYGPATH_W) '$(srcdir)/newfile.S'; fi`

libdos_a-nfiles.o: nfiles.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-nfiles.o `test -f 'nfiles.S' || echo '$(srcdir)/'`nfiles.S

libdos_a-nfiles.obj: nfiles.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-nfiles.obj `if test -f 'nfiles.S'; then $(CYGPATH_W) 'nfiles.S'; else $(CYGPATH_W) '$(srcdir)/nfiles.S'; fi`

libdos_a-open.o: open.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-open.o `test -f 'open.S' || echo '$(srcdir)/'`open.S

libdos_a-open.obj: open.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-open.obj `if test -f 'open.S'; then $(CYGPATH_W) 'open.S'; else $(CYGPATH_W) '$(srcdir)/open.S'; fi`

libdos_a-open_pr.o: open_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-open_pr.o `test -f 'open_pr.S' || echo '$(srcdir)/'`open_pr.S

libdos_a-open_pr.obj: open_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-open_pr.obj `if test -f 'open_pr.S'; then $(CYGPATH_W) 'open_pr.S'; else $(CYGPATH_W) '$(srcdir)/open_pr.S'; fi`

libdos_a-os_patch.o: os_patch.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-os_patch.o `test -f 'os_patch.S' || echo '$(srcdir)/'`os_patch.S

libdos_a-os_patch.obj: os_patch.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-os_patch.obj `if test -f 'os_patch.S'; then $(CYGPATH_W) 'os_patch.S'; else $(CYGPATH_W) '$(srcdir)/os_patch.S'; fi`

libdos_a-pathchk.o: pathchk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-pathchk.o `test -f 'pathchk.S' || echo '$(srcdir)/'`pathchk.S

libdos_a-pathchk.obj: pathchk.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-pathchk.obj `if test -f 'pathchk.S'; then $(CYGPATH_W) 'pathchk.S'; else $(CYGPATH_W) '$(srcdir)/pathchk.S'; fi`

libdos_a-print.o: print.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-print.o `test -f 'print.S' || echo '$(srcdir)/'`print.S

libdos_a-print.obj: print.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-print.obj `if test -f 'print.S'; then $(CYGPATH_W) 'print.S'; else $(CYGPATH_W) '$(srcdir)/print.S'; fi`

libdos_a-prnout.o: prnout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-prnout.o `test -f 'prnout.S' || echo '$(srcdir)/'`prnout.S

libdos_a-prnout.obj: prnout.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-prnout.obj `if test -f 'prnout.S'; then $(CYGPATH_W) 'prnout.S'; else $(CYGPATH_W) '$(srcdir)/prnout.S'; fi`

libdos_a-prnsns.o: prnsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-prnsns.o `test -f 'prnsns.S' || echo '$(srcdir)/'`prnsns.S

libdos_a-prnsns.obj: prnsns.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-prnsns.obj `if test -f 'prnsns.S'; then $(CYGPATH_W) 'prnsns.S'; else $(CYGPATH_W) '$(srcdir)/prnsns.S'; fi`

libdos_a-pspset.o: pspset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-pspset.o `test -f 'pspset.S' || echo '$(srcdir)/'`pspset.S

libdos_a-pspset.obj: pspset.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-pspset.obj `if test -f 'pspset.S'; then $(CYGPATH_W) 'pspset.S'; else $(CYGPATH_W) '$(srcdir)/pspset.S'; fi`

libdos_a-putchar.o: putchar.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-putchar.o `test -f 'putchar.S' || echo '$(srcdir)/'`putchar.S

libdos_a-putchar.obj: putchar.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-putchar.obj `if test -f 'putchar.S'; then $(CYGPATH_W) 'putchar.S'; else $(CYGPATH_W) '$(srcdir)/putchar.S'; fi`

libdos_a-rassign.o: rassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-rassign.o `test -f 'rassign.S' || echo '$(srcdir)/'`rassign.S

libdos_a-rassign.obj: rassign.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-rassign.obj `if test -f 'rassign.S'; then $(CYGPATH_W) 'rassign.S'; else $(CYGPATH_W) '$(srcdir)/rassign.S'; fi`

libdos_a-read.o: read.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-read.o `test -f 'read.S' || echo '$(srcdir)/'`read.S

libdos_a-read.obj: read.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-read.obj `if test -f 'read.S'; then $(CYGPATH_W) 'read.S'; else $(CYGPATH_W) '$(srcdir)/read.S'; fi`

libdos_a-retshell.o: retshell.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-retshell.o `test -f 'retshell.S' || echo '$(srcdir)/'`retshell.S

libdos_a-retshell.obj: retshell.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-retshell.obj `if test -f 'retshell.S'; then $(CYGPATH_W) 'retshell.S'; else $(CYGPATH_W) '$(srcdir)/retshell.S'; fi`

libdos_a-rmdir.o: rmdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-rmdir.o `test -f 'rmdir.S' || echo '$(srcdir)/'`rmdir.S

libdos_a-rmdir.obj: rmdir.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-rmdir.obj `if test -f 'rmdir.S'; then $(CYGPATH_W) 'rmdir.S'; else $(CYGPATH_W) '$(srcdir)/rmdir.S'; fi`

libdos_a-s_malloc.o: s_malloc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_malloc.o `test -f 's_malloc.S' || echo '$(srcdir)/'`s_malloc.S

libdos_a-s_malloc.obj: s_malloc.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_malloc.obj `if test -f 's_malloc.S'; then $(CYGPATH_W) 's_malloc.S'; else $(CYGPATH_W) '$(srcdir)/s_malloc.S'; fi`

libdos_a-s_malloc0.o: s_malloc0.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_malloc0.o `test -f 's_malloc0.S' || echo '$(srcdir)/'`s_malloc0.S

libdos_a-s_malloc0.obj: s_malloc0.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_malloc0.obj `if test -f 's_malloc0.S'; then $(CYGPATH_W) 's_malloc0.S'; else $(CYGPATH_W) '$(srcdir)/s_malloc0.S'; fi`

libdos_a-s_mfree.o: s_mfree.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_mfree.o `test -f 's_mfree.S' || echo '$(srcdir)/'`s_mfree.S

libdos_a-s_mfree.obj: s_mfree.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_mfree.obj `if test -f 's_mfree.S'; then $(CYGPATH_W) 's_mfree.S'; else $(CYGPATH_W) '$(srcdir)/s_mfree.S'; fi`

libdos_a-s_process.o: s_process.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_process.o `test -f 's_process.S' || echo '$(srcdir)/'`s_process.S

libdos_a-s_process.obj: s_process.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-s_process.obj `if test -f 's_process.S'; then $(CYGPATH_W) 's_process.S'; else $(CYGPATH_W) '$(srcdir)/s_process.S'; fi`

libdos_a-seek.o: seek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-seek.o `test -f 'seek.S' || echo '$(srcdir)/'`seek.S

libdos_a-seek.obj: seek.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-seek.obj `if test -f 'seek.S'; then $(CYGPATH_W) 'seek.S'; else $(CYGPATH_W) '$(srcdir)/seek.S'; fi`

libdos_a-send_pr.o: send_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-send_pr.o `test -f 'send_pr.S' || echo '$(srcdir)/'`send_pr.S

libdos_a-send_pr.obj: send_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-send_pr.obj `if test -f 'send_pr.S'; then $(CYGPATH_W) 'send_pr.S'; else $(CYGPATH_W) '$(srcdir)/send_pr.S'; fi`

libdos_a-setblock.o: setblock.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setblock.o `test -f 'setblock.S' || echo '$(srcdir)/'`setblock.S

libdos_a-setblock.obj: setblock.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setblock.obj `if test -f 'setblock.S'; then $(CYGPATH_W) 'setblock.S'; else $(CYGPATH_W) '$(srcdir)/setblock.S'; fi`

libdos_a-setdate.o: setdate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setdate.o `test -f 'setdate.S' || echo '$(srcdir)/'`setdate.S

libdos_a-setdate.obj: setdate.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setdate.obj `if test -f 'setdate.S'; then $(CYGPATH_W) 'setdate.S'; else $(CYGPATH_W) '$(srcdir)/setdate.S'; fi`

libdos_a-setenv.o: setenv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setenv.o `test -f 'setenv.S' || echo '$(srcdir)/'`setenv.S

libdos_a-setenv.obj: setenv.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setenv.obj `if test -f 'setenv.S'; then $(CYGPATH_W) 'setenv.S'; else $(CYGPATH_W) '$(srcdir)/setenv.S'; fi`

libdos_a-setpdb.o: setpdb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setpdb.o `test -f 'setpdb.S' || echo '$(srcdir)/'`setpdb.S

libdos_a-setpdb.obj: setpdb.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-setpdb.obj `if test -f 'setpdb.S'; then $(CYGPATH_W) 'setpdb.S'; else $(CYGPATH_W) '$(srcdir)/setpdb.S'; fi`

libdos_a-settim2.o: settim2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-settim2.o `test -f 'settim2.S' || echo '$(srcdir)/'`settim2.S

libdos_a-settim2.obj: settim2.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-settim2.obj `if test -f 'settim2.S'; then $(CYGPATH_W) 'settim2.S'; else $(CYGPATH_W) '$(srcdir)/settim2.S'; fi`

libdos_a-settime.o: settime.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-settime.o `test -f 'settime.S' || echo '$(srcdir)/'`settime.S

libdos_a-settime.obj: settime.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-settime.obj `if test -f 'settime.S'; then $(CYGPATH_W) 'settime.S'; else $(CYGPATH_W) '$(srcdir)/settime.S'; fi`

libdos_a-sleep_pr.o: sleep_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-sleep_pr.o `test -f 'sleep_pr.S' || echo '$(srcdir)/'`sleep_pr.S

libdos_a-sleep_pr.obj: sleep_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-sleep_pr.obj `if test -f 'sleep_pr.S'; then $(CYGPATH_W) 'sleep_pr.S'; else $(CYGPATH_W) '$(srcdir)/sleep_pr.S'; fi`

libdos_a-super.o: super.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-super.o `test -f 'super.S' || echo '$(srcdir)/'`super.S

libdos_a-super.obj: super.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-super.obj `if test -f 'super.S'; then $(CYGPATH_W) 'super.S'; else $(CYGPATH_W) '$(srcdir)/super.S'; fi`

libdos_a-super_jsr.o: super_jsr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-super_jsr.o `test -f 'super_jsr.S' || echo '$(srcdir)/'`super_jsr.S

libdos_a-super_jsr.obj: super_jsr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-super_jsr.obj `if test -f 'super_jsr.S'; then $(CYGPATH_W) 'super_jsr.S'; else $(CYGPATH_W) '$(srcdir)/super_jsr.S'; fi`

libdos_a-suspend_pr.o: suspend_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-suspend_pr.o `test -f 'suspend_pr.S' || echo '$(srcdir)/'`suspend_pr.S

libdos_a-suspend_pr.obj: suspend_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-suspend_pr.obj `if test -f 'suspend_pr.S'; then $(CYGPATH_W) 'suspend_pr.S'; else $(CYGPATH_W) '$(srcdir)/suspend_pr.S'; fi`

libdos_a-time_pr.o: time_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-time_pr.o `test -f 'time_pr.S' || echo '$(srcdir)/'`time_pr.S

libdos_a-time_pr.obj: time_pr.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-time_pr.obj `if test -f 'time_pr.S'; then $(CYGPATH_W) 'time_pr.S'; else $(CYGPATH_W) '$(srcdir)/time_pr.S'; fi`

libdos_a-unlock.o: unlock.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-unlock.o `test -f 'unlock.S' || echo '$(srcdir)/'`unlock.S

libdos_a-unlock.obj: unlock.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-unlock.obj `if test -f 'unlock.S'; then $(CYGPATH_W) 'unlock.S'; else $(CYGPATH_W) '$(srcdir)/unlock.S'; fi`

libdos_a-verify.o: verify.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-verify.o `test -f 'verify.S' || echo '$(srcdir)/'`verify.S

libdos_a-verify.obj: verify.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-verify.obj `if test -f 'verify.S'; then $(CYGPATH_W) 'verify.S'; else $(CYGPATH_W) '$(srcdir)/verify.S'; fi`

libdos_a-verifyg.o: verifyg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-verifyg.o `test -f 'verifyg.S' || echo '$(srcdir)/'`verifyg.S

libdos_a-verifyg.obj: verifyg.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-verifyg.obj `if test -f 'verifyg.S'; then $(CYGPATH_W) 'verifyg.S'; else $(CYGPATH_W) '$(srcdir)/verifyg.S'; fi`

libdos_a-vernum.o: vernum.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-vernum.o `test -f 'vernum.S' || echo '$(srcdir)/'`vernum.S

libdos_a-vernum.obj: vernum.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-vernum.obj `if test -f 'vernum.S'; then $(CYGPATH_W) 'vernum.S'; else $(CYGPATH_W) '$(srcdir)/vernum.S'; fi`

libdos_a-wait.o: wait.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-wait.o `test -f 'wait.S' || echo '$(srcdir)/'`wait.S

libdos_a-wait.obj: wait.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-wait.obj `if test -f 'wait.S'; then $(CYGPATH_W) 'wait.S'; else $(CYGPATH_W) '$(srcdir)/wait.S'; fi`

libdos_a-write.o: write.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-write.o `test -f 'write.S' || echo '$(srcdir)/'`write.S

libdos_a-write.obj: write.S
	$(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libdos_a_CCASFLAGS) $(CCASFLAGS) -c -o libdos_a-write.obj `if test -f 'write.S'; then $(CYGPATH_W) 'write.S'; else $(CYGPATH_W) '$(srcdir)/write.S'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am:
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(toollibdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-toollibLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-toollibLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-toollibLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-toollibLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip install-toollibLIBRARIES \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-toollibLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
